@using EnumsNET
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.Tags;
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Ordering.Models;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers;
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions;
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.Dashboard.OrganisationModel;
@{
    ViewBag.Title = "Orders dashboard";
}

<div data-test-id="dashboard-page">
    <partial name="Partials/_BackLink" model="Model" />

    <div class="nhsuk-grid-row">
        <div class="nhsuk-grid-column-two-thirds">
            <nhs-page-title title="@ViewBag.Title"
                            caption="@Model.OrganisationName"
                            advice="Manage orders currently in progress and view completed orders." />
            @if (Model.CanActOnBehalf)
            {
                <h2>Current organisation</h2>
                <p class="nhsuk-u-margin-bottom-2">You are currently acting on behalf of:</p>
                <p data-test-id="dashboard-page-proxy-on-behalf" class="nhsuk-u-margin-bottom-6">
                    @Model.OrganisationName <a asp-action="@nameof(DashboardController.SelectOrganisation)"
                                               asp-controller="@typeof(DashboardController).ControllerName()"
                                               asp-route-odsCode="@Model.OdsCode"
                                               class="nhsuk-u-margin-left-4">Change organisation</a>
                </p>
            }
            <vc:nhs-action-link text="Create a new order"
                                     url="@Url.Action(
                                         nameof(OrderTriageController.Index),
                                         typeof(OrderTriageController).ControllerName(),
                                         new { Model.OdsCode })" />
        </div>

        <div class="nhsuk-grid-column-full">
            @if((Model.Orders.Count == 0 && Context.Request.Query["search"].Count > 0) || Model.Orders.Count > 0)
            {
                <vc:nhs-autocomplete id="orders-dashboard-autocomplete"
                    ajax-url="@Url.Action(
                        nameof(DashboardController.FilterSearchSuggestions),
                        typeof(DashboardController).ControllerName(),
                        new { odsCode = Model.OdsCode })"
                    title-text="Search for order by order description or Call-off ID"
                    query-parameter-name="search"/>
            }
            @if (Model.Orders is not null && Model.Orders.Count > 0)
            {
                <nhs-table data-test-id="orders-table">
                    <nhs-table-column>Call-off ID</nhs-table-column>
                    <nhs-table-column>Order description</nhs-table-column>
                    <nhs-table-column>Last updated</nhs-table-column>
                    <nhs-table-column>Status</nhs-table-column>
                    <nhs-table-column>Action</nhs-table-column>
                    @foreach(var order in Model.Orders)
                    {
                        <nhs-table-row-container>
                            <nhs-table-cell>@order.CallOffId</nhs-table-cell>
                            <nhs-table-cell>@order.Description</nhs-table-cell>
                            <nhs-table-cell>@order.LastUpdated.ToString("dd/MM/yyyy")</nhs-table-cell>
                            <nhs-table-cell>
                                <nhs-tag colour="@GetTagColour(order.OrderStatus)" text="@order.OrderStatus.AsString(EnumFormat.EnumMemberValue)" />
                            </nhs-table-cell>
                            <nhs-table-cell>
                                <a data-test-id="link-@order.CallOffId" asp-action="@nameof(OrderController.Order)"
                                    asp-controller="@typeof(OrderController).ControllerName()"
                                    asp-route-odsCode="@Model.OdsCode"
                                    asp-route-callOffId="@order.CallOffId" style="white-space:nowrap;">
                                    @GetLinkName(order.OrderStatus)
                                </a>
                            </nhs-table-cell>
                        </nhs-table-row-container>
                    }
                </nhs-table>
                <div id="pagination">
                    <nhs-page-number-pagination current-page-number="@Model.Options.PageNumber"
                                                total-number-of-pages="@Model.Options.NumberOfPages" />

                </div>
            }
            else
            {
                @if(Context.Request.Query["search"].Count > 0)
                {
                    <h2 id="no-results-search">No results were found for "@Context.Request.Query["search"].FirstOrDefault()"</h2>
                    <p>Try a different search term.</p>
                } else
                {
                    <p id="no-orders">There are currently no orders for this organisation.</p>
                }
            }
        </div>
    </div>
</div>

@{
    string GetLinkName(OrderStatus orderStatus) => orderStatus switch
    {
        OrderStatus.Complete => "View",
        OrderStatus.InProgress => "Edit",
        _ => string.Empty,
    };

    NhsTagsTagHelper.TagColour GetTagColour(OrderStatus orderStatus) => orderStatus switch
    {
        OrderStatus.Complete => NhsTagsTagHelper.TagColour.Green,
        OrderStatus.InProgress => NhsTagsTagHelper.TagColour.Yellow,
        _ => throw new ArgumentOutOfRangeException(nameof(orderStatus)),
    };
}
