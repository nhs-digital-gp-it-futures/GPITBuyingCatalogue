@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.ImportServiceRecipients.ImportServiceRecipientModel
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.SolutionSelection
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.InputBoxes
@{
    ViewBag.Title = "Import Service Recipients";
}

<partial name="Partials/_BackLink" model="@Model" />
<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-two-thirds">
        <nhs-validation-summary />

        <nhs-page-title title="@ViewBag.Title"
                        caption="@Model.CatalogueItemName"
                        advice="Create a CSV with your Service Recipients in the first column and their ODS codes in the second column."/>

        <vc:nhs-secondary-button text="Download template (CSV)"
                                 type="Secondary"
                                 url="@Url.Action( nameof(ImportServiceRecipientsController.DownloadTemplate), typeof(ImportServiceRecipientsController).ControllerName(), new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId })"/>

        <p>
            Add your Service Recipients to a template and import them for @Model.CatalogueItemName.
            You’ll be able to edit them later.
            If you import Service Recipients more than once, they’ll be overwritten each time.
        </p>

        <form method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="BackLink"/>
            <input type="hidden" asp-for="CatalogueItemName"/>

            <nhs-fieldset-form-container asp-for="@Model" label-text="Import a file" size="Medium">
                <nhs-file-upload file-type="Csv" asp-for="File"></nhs-file-upload>
            </nhs-fieldset-form-container>

            <nhs-submit-button text="Continue"></nhs-submit-button>
        </form>
    </div>
</div>
