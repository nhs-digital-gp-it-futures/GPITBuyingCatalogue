@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.FundingSource
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.SolutionSelection;
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Enums;
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.Order.OrderModel
@{
    ViewBag.Title = Model.Title;
}

<div data-test-id="@Model.CallOffId-page">
    <partial name="Partials/_BackLink" model="Model" />
    <div class="nhsuk-grid-row nhsuk-u-margin-bottom-6">
        <div class="nhsuk-grid-column-full">
            <nhs-validation-summary />
            <nhs-page-title title="@ViewBag.Title"
                            advice="@Model.TitleAdvice"
							caption = "@Model.OrganisationName" />

				@if (!string.IsNullOrWhiteSpace(Model.Description)){
					<h2 class="nhsuk-heading-s">Description</h2>
					<p>@Model.Description</p>
				}

                <nhs-task-list>
                    <nhs-task-list-section label-text="Prepare order">
                        <nhs-task-list-item label-text="Order description"
                                            url="@Model.DescriptionUrl"
                                            status="@Model.SectionStatuses.DescriptionStatus" />
                        <nhs-task-list-item label-text="Call-off Ordering Party contact details"
                                            url="@Url.Action(
                                                nameof(OrderingPartyController.OrderingParty),
                                                typeof(OrderingPartyController).ControllerName(),
                                                new { Model.InternalOrgId, Model.CallOffId})"
                                            status="@Model.SectionStatuses.OrderingPartyStatus" />
                        <nhs-task-list-item label-text="Supplier information and contact details"
                                            url="@Url.Action(
                                                nameof(SupplierController.Supplier),
                                                typeof(SupplierController).ControllerName(),
                                                new { Model.InternalOrgId, Model.CallOffId})"
                                            status="@Model.SectionStatuses.SupplierStatus" />
                        <nhs-task-list-item label-text="Timescales for Call-off Agreement"
                                            url="@Url.Action(
                                                nameof(CommencementDateController.CommencementDate),
                                                typeof(CommencementDateController).ControllerName(),
                                                new { Model.InternalOrgId, Model.CallOffId})"
                                            status="@Model.SectionStatuses.CommencementDateStatus" />
                    </nhs-task-list-section>
                    <nhs-task-list-section label-text="Add solutions and services">
                        <nhs-task-list-item label-text="Select solutions and services"
                                            url="@SolutionSelectionUrlTarget(Model.SectionStatuses.SolutionOrService)"
                                            status="@Model.SectionStatuses.SolutionOrService" />
						<nhs-task-list-item label-text="Select funding sources"
                                            url="@Url.Action(
                                                    nameof(FundingSourceController.FundingSources),
                                                    typeof(FundingSourceController).ControllerName(),
                                                    new { Model.InternalOrgId, Model.CallOffId })"
                                            status="@Model.SectionStatuses.FundingSource" />
                    </nhs-task-list-section>
                    <nhs-task-list-section label-text="Complete order">                        
                        <nhs-task-list-item label-text="Review and complete order"
                                            url="@Url.Action(
                                                    nameof(OrderController.Summary),
                                                    typeof(OrderController).ControllerName(),
                                                    new { Model.InternalOrgId, Model.CallOffId })"
                                            status="@Model.SectionStatuses.ReviewAndCompleteStatus" />
                    </nhs-task-list-section>
                </nhs-task-list>

            <vc:nhs-secondary-button text="Preview order summary"
                                     url="@Url.Action(
                                            nameof(OrderController.Summary),
                                            typeof(OrderController).ControllerName(),
                                            new { Model.InternalOrgId, Model.CallOffId })"
                                     use-primary-colour="false" /><br />

            <vc:nhs-delete-button text="Delete order"
                                  url="@Url.Action(
                                            nameof(DeleteOrderController.DeleteOrder),
                                            typeof(DeleteOrderController).ControllerName(),
                                            new { Model.InternalOrgId, Model.CallOffId })"/>

            @if (Model.LastUpdated is not null && !string.IsNullOrWhiteSpace(Model.LastUpdatedByUserName))
            {
                <nhs-endnote data-test-id="last-updated-endnote">Order last updated by @Model.LastUpdatedByUserName on @Model.LastUpdated!.Value.ToString("dd MMMM yyyy")</nhs-endnote>
            }
        </div>
    </div>
</div>

@{
	string SolutionSelectionUrlTarget(TaskProgress solutionSelectionProgress) =>
				solutionSelectionProgress switch
				{
					TaskProgress.NotStarted =>
						Url.Action(
							nameof(CatalogueSolutionsController.SelectSolution),
							typeof(CatalogueSolutionsController).ControllerName(),
							new { Model.InternalOrgId, Model.CallOffId }),
					TaskProgress.InProgress =>
						Url.Action(
							nameof(CatalogueSolutionsController.SelectSolution),
							typeof(CatalogueSolutionsController).ControllerName(),
							new { Model.InternalOrgId, Model.CallOffId }),
					TaskProgress.Completed =>
						Url.Action(
							nameof(ReviewSolutionsController.ReviewSolutions),
							typeof(ReviewSolutionsController).ControllerName(),
							new { Model.InternalOrgId, Model.CallOffId }),
					TaskProgress.CannotStart => string.Empty,
					_ => throw new ArgumentException("Orders solution selection currently in a status that it should not be able to be in."),
				};
}
