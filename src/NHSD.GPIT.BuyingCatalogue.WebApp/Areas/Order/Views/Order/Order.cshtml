@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.FundingSource
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.SolutionSelection;
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Enums;
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Routing
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Controllers.Contracts
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.Order
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.Order.OrderModel

@{
    ViewBag.Title = Model.Title;

    var isAmendment = Model.IsAmendment;
    var deleteButtonTitle = isAmendment ? "Delete amendment" : "Delete order";
    var contractSectionLabel = isAmendment ? "Supporting documents" : "Complete contract";
    var solutionsAndServicesSectionLabel = isAmendment ? "Solution and services" : "Add solutions and services";
}

<div data-test-id="@Model.CallOffId-page">
    <partial name="Partials/_BackLink" model="Model" />

    <div class="nhsuk-grid-row nhsuk-u-margin-bottom-6">
        <div class="nhsuk-grid-column-two-thirds">
            <nhs-validation-summary />

            <nhs-page-title title="@ViewBag.Title"
                            caption="@Model.OrganisationName"
                            advice="@Model.TitleAdvice"/>

            @if (!string.IsNullOrWhiteSpace(Model.Description))
            {
                <h2 class="nhsuk-heading-s">Description</h2>
                <p>@Model.Description</p>
            }

            <nhs-task-list>
                <nhs-task-list-section label-text="Prepare order">
                    <nhs-task-list-item label-text="Order description"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.OrderDescription, isAmendment)"
                                        data-test-id="test-order-description"
                                        url="@Model.DescriptionUrl"
                                        status="@Model.Progress.DescriptionStatus" />

                    <nhs-task-list-item label-text="Call-off Ordering Party contact details"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.OrderingParty, isAmendment)"
                                        data-test-id="test-calloff-party"
                                        url="@Url.Action(
                                                 nameof(OrderingPartyController.OrderingParty),
                                                 typeof(OrderingPartyController).ControllerName(),
                                                 new { Model.InternalOrgId, Model.CallOffId})"
                                        status="@Model.Progress.OrderingPartyStatus" />

                    <nhs-task-list-item label-text="Supplier information and contact details"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.Supplier, isAmendment)"
                                        data-test-id="test-supplier-contact"
                                        url="@Url.Action(
                                                 nameof(SupplierController.Supplier),
                                                 typeof(SupplierController).ControllerName(),
                                                 new { Model.InternalOrgId, Model.CallOffId})"
                                        status="@Model.Progress.SupplierStatus" />

                    <nhs-task-list-item label-text="Timescales for Call-off Agreement"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.CommencementDate, isAmendment)"
                                        data-test-id="test-timescales"
                                        url="@Url.Action(
                                                 nameof(CommencementDateController.CommencementDate),
                                                 typeof(CommencementDateController).ControllerName(),
                                                 new { Model.InternalOrgId, Model.CallOffId})"
                                        status="@Model.Progress.CommencementDateStatus" />
                </nhs-task-list-section>

                <nhs-task-list-section label-text="@solutionsAndServicesSectionLabel">
                    <nhs-task-list-item label-text="Select solutions and services"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.SolutionsAndServices, isAmendment)"
                                        data-test-id="test-solutions-and-services"
                                        url="@SolutionSelectionUrlTarget(Model.Progress.SolutionOrService)"
                                        status="@Model.Progress.SolutionOrService" />

                    @if (!isAmendment)
                    {
                        <nhs-task-list-item label-text="Planned delivery dates"
                                            label-hint="@Model.StatusDescription(OrderSummaryField.PlannedDeliveryDates, isAmendment: false)"
                                            data-test-id="test-planned-delivery-dates"
                                            url="@DeliveryDatesUrlTarget(Model.Progress.DeliveryDates)"
                                            status="@Model.Progress.DeliveryDates" />
                    }

                    <nhs-task-list-item label-text="Select funding sources"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.FundingSources, isAmendment)"
                                        data-test-id="test-funding-sources"
                                        url="@FundingSourceUrlTarget()"
                                        status="@Model.Progress.FundingSource" />
                </nhs-task-list-section>

                <nhs-task-list-section label-text="@contractSectionLabel">
                    <nhs-task-list-item label-text="Implementation plan milestones"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.ImplementationPlan, isAmendment)"
                                        data-test-id="test-implementation-milestones"
                                        url="@Url.Action(
                                                 nameof(ImplementationPlanController.DefaultImplementationPlan),
                                                 typeof(ImplementationPlanController).ControllerName(),
                                                 new { Model.InternalOrgId, Model.CallOffId })"
                                        status="@Model.Progress.ImplementationPlan" />

                    @if (!isAmendment)
                    {
                        <nhs-task-list-item label-text="Associated Service billing and requirements"
                                            label-hint="@Model.StatusDescription(OrderSummaryField.AssociatedServicesBilling, isAmendment: false)"
                                            data-test-id="test-associated-service-billing"
                                            url="@Url.Action(
                                                     nameof(AssociatedServicesBillingController.ReviewBilling),
                                                     typeof(AssociatedServicesBillingController).ControllerName(),
                                                     new { Model.InternalOrgId, Model.CallOffId })"
                                            status="@Model.Progress.AssociatedServiceBilling" />
                    }

                    <nhs-task-list-item label-text="Data processing information"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.DataProcessing, isAmendment)"
                                        data-test-id="test-data-processing-info"
                                        url="@Url.Action(
                                                nameof(DataProcessingPlanController.Index),
                                                typeof(DataProcessingPlanController).ControllerName(),
                                                new { Model.InternalOrgId, Model.CallOffId })"
                                        status="@Model.Progress.DataProcessingInformation" />
                </nhs-task-list-section>

                <nhs-task-list-section label-text="Complete order">
                    <nhs-task-list-item label-text="Review and complete order"
                                        label-hint="@Model.StatusDescription(OrderSummaryField.ReviewAndComplete, isAmendment)"
                                        data-test-id="test-review-and-complete-order"
                                        url="@Url.Action(
                                                 nameof(OrderController.Summary),
                                                 typeof(OrderController).ControllerName(),
                                                 new { Model.InternalOrgId, Model.CallOffId })"
                                        status="@Model.Progress.ReviewAndCompleteStatus" />
                </nhs-task-list-section>
            </nhs-task-list>

            @if (Model.CallOffId != default)
            {
                <nhs-button-group>
                    <vc:nhs-secondary-button text="Preview order"
                                             url="@Url.Action(
                                                      nameof(OrderController.Summary),
                                                      typeof(OrderController).ControllerName(),
                                                      new { Model.InternalOrgId, Model.CallOffId })"
                                             type="Secondary"/>

                    <vc:nhs-secondary-button text="Save for later"
                                     url="@Model.BackLink"
                                     type="Secondary" />
                </nhs-button-group>

                <vc:nhs-secondary-button text="@deleteButtonTitle"
                                         url="@Url.Action(
                                                  nameof(DeleteOrderController.DeleteOrder),
                                                  typeof(DeleteOrderController).ControllerName(),
                                                  new { Model.InternalOrgId, Model.CallOffId })"
                                         type="Delete"/>
            }

            @if (Model.LastUpdated is not null
                && !string.IsNullOrWhiteSpace(Model.LastUpdatedByUserName))
            {
                <nhs-endnote data-test-id="last-updated-endnote">
                    Order last updated by @Model.LastUpdatedByUserName on @($"{Model.LastUpdated:dd MMMM yyyy}")
                </nhs-endnote>
            }
        </div>
    </div>
</div>

@{
    string DeliveryDatesUrlTarget(TaskProgress progress) => progress switch
    {
        TaskProgress.NotStarted => Url.Action(
            nameof(DeliveryDatesController.SelectDate),
            typeof(DeliveryDatesController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId }),
        
        TaskProgress.InProgress => Url.Action(
            nameof(DeliveryDatesController.Review),
            typeof(DeliveryDatesController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId }),

        TaskProgress.Completed => Url.Action(
            nameof(DeliveryDatesController.Review),
            typeof(DeliveryDatesController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId }),

        TaskProgress.CannotStart => string.Empty,
        TaskProgress.NotApplicable => string.Empty,
        TaskProgress.Optional => string.Empty,

        _ => throw new ArgumentException("Planned delivery dates currently in a status that it should not be able to be in."),
    };

    string SolutionSelectionUrlTarget(TaskProgress progress) => progress switch
    {
        TaskProgress.NotStarted => Url.Action(
            nameof(CatalogueSolutionsController.SelectSolution),
            typeof(CatalogueSolutionsController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId }),

        TaskProgress.InProgress => Url.Action(
            nameof(TaskListController.TaskList),
            typeof(TaskListController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId, Source = RoutingSource.Dashboard }),

        TaskProgress.Completed => Url.Action(
            nameof(ReviewSolutionsController.ReviewSolutions),
            typeof(ReviewSolutionsController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId }),

        TaskProgress.CannotStart => string.Empty,
        TaskProgress.NotApplicable => string.Empty,
        TaskProgress.Optional => string.Empty,

        _ => throw new ArgumentException("Orders solution selection currently in a status that it should not be able to be in."),
    };

    string FundingSourceUrlTarget() => Model.ShowSelectFrameworkPage
        ? Url.Action(
            nameof(FundingSourceController.SelectFramework),
            typeof(FundingSourceController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId })
        : Url.Action(
            nameof(FundingSourceController.FundingSources),
            typeof(FundingSourceController).ControllerName(),
            new { Model.InternalOrgId, Model.CallOffId });
}
