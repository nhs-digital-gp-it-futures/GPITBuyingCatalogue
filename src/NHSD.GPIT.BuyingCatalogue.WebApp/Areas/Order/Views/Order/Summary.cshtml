@using System.Linq
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Ordering.Models
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Order.Models.Order.SummaryModel;
@{
    ViewBag.Title = Model.Title;
}
<style>
    .nhsuk-table-responsive th {
        font-size: 1em;
        white-space: normal;
    }

    .nhsuk-table-responsive td {
        font-size: 1em;
    }
</style>
<partial name="Partials/_BackLink" model="Model" />

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full-width">
        <nhs-validation-summary />
        <nhs-page-title title="@ViewBag.Title"
                        caption="@Model.Order.CallOffId"
                        advice="@Model.AdviceText" />

        @{
            var oneOffOrderItems = Model.Order.OrderItems?.Where(p => p.OrderItemPrice is not null && p.OrderItemPrice?.CostType == CostType.OneOff);
            var recurringOrderItems = Model.Order.OrderItems?.Where(p => p.OrderItemPrice is not null && p.OrderItemPrice?.CostType != CostType.OneOff);

            var solutionOrderItem = Model.Order.OrderItems?.FirstOrDefault(p => p.CatalogueItem.CatalogueItemType == CatalogueItemType.Solution);
            var additionalServices = Model.Order.OrderItems?.Where(p => p.CatalogueItem.CatalogueItemType == CatalogueItemType.AdditionalService).ToList();
            var associatedServices = Model.Order.OrderItems?.Where(p => p.CatalogueItem.CatalogueItemType == CatalogueItemType.AssociatedService).ToList();
        }
        <nhs-summary-list>
            <nhs-summary-list-row label-text="Order ID" data-test-id="order-id-summary">
                @Model.Order.CallOffId
            </nhs-summary-list-row>
            <nhs-summary-list-row label-text="Description" data-test-id="order-description-summary">
                @Model.Order.Description
            </nhs-summary-list-row>
            <nhs-summary-list-row label-text="Date created" data-test-id="date-created-summary">
                @Model.Order.Created.ToString("dd MMMM yyyy", System.Globalization.CultureInfo.InvariantCulture)
            </nhs-summary-list-row>
            @if (Model.Order.OrderingParty is not null)
            {
                if (Model.Order.OrderingPartyContact is not null)
                {
                    <nhs-summary-list-row label-text="Call-off Ordering Party" data-test-id="ordering-party-summary">
                        @($"{Model.Order.OrderingPartyContact.FirstName} {Model.Order.OrderingPartyContact.LastName}")<br/>
                        @Model.Order.OrderingParty.Name<br/>
                        @Model.Order.OrderingParty.ExternalIdentifier<br/>
                        <vc:nhs-address address="@Model.Order.OrderingParty.Address"/>
                    </nhs-summary-list-row>
                }
            }
            @if (Model.Order.Supplier is not null)
            {
                if (Model.Order.SupplierContact is not null)
                {
                    <nhs-summary-list-row label-text="Supplier" data-test-id="supplier-summary">
                        @($"{Model.Order.SupplierContact.FirstName} {Model.Order.SupplierContact.LastName}")<br/>
                        @Model.Order.Supplier.Name<br/>
                        <vc:nhs-address address="@Model.Order.Supplier.Address"/>
                    </nhs-summary-list-row>
                }
            }
            @if (Model.Order.CommencementDate.HasValue)
            {
                <nhs-summary-list-row label-text="Approximate start date" data-test-id="start-date-summary">
                    @Model.Order.CommencementDate!.Value.ToString("dd MMMM yyyy", System.Globalization.CultureInfo.InvariantCulture)
                </nhs-summary-list-row>
            }
            @if (Model.Order.InitialPeriod.HasValue)
            {
                <nhs-summary-list-row label-text="Initial period" data-test-id="initial-period-summary">
                    @($"{Model.Order.InitialPeriod} months")
                </nhs-summary-list-row>
            }
            @if (Model.Order.MaximumTerm.HasValue)
            {
                <nhs-summary-list-row label-text="Maximum term" data-test-id="maximum-term-summary">
                    @($"{Model.Order.MaximumTerm} months")
                </nhs-summary-list-row>
            }
            @if (Model.Order.CommencementDate.HasValue && Model.Order.MaximumTerm.HasValue)
            {
                <nhs-summary-list-row label-text="End date" data-test-id="end-date-summary">
                    @Model.Order.CommencementDate?.AddMonths(Model.Order.MaximumTerm!.Value).AddDays(-1).ToString("dd MMMM yyyy", System.Globalization.CultureInfo.InvariantCulture)
                </nhs-summary-list-row>
            }
        </nhs-summary-list>

        <h2>Items added to this order</h2>
        @if (!Model.Order.OrderItems.Any())
        {
            <p>No items have been added to this order yet</p>
        }
        else
        {
            <br/>
            @if (solutionOrderItem is not null)
            {
                <h3 id="catalogue-solutions-title">Catalogue Solution</h3>
                <partial name="_OrderItemSummary" model="solutionOrderItem"/>
            }

            @if (additionalServices is not null && additionalServices.Any())
            {
                <h3 id="additional-services-title">Additional Services</h3>
                @foreach (var additionalService in additionalServices)
                {
                    <partial name="_OrderItemSummary" model="additionalService"/>
                }
            }

            @if (associatedServices is not null && associatedServices.Any())
            {
                <h3 id="associated-services-title">Associated Services</h3>
                @foreach (var associatedService in associatedServices)
                {
                    <partial name="_OrderItemSummary" model="associatedService"/>
                }
            }

            <br/>
            <nhs-summary-list>
                <nhs-summary-list-row label-text="Total one-off cost:" data-test-id="one-off-cost-summary">
                    £@((oneOffOrderItems?.Sum(orderItem => orderItem.OrderItemPrice.CalculateTotalCost(orderItem.TotalQuantity)) ?? 0M).ToString("N2"))
                </nhs-summary-list-row>
                <nhs-summary-list-row label-text="Total monthly cost:" data-test-id="monthly-cost-summary">
                    £@((recurringOrderItems?.Sum(orderItem => orderItem.OrderItemPrice.CalculateCostPerMonth(orderItem.TotalQuantity)) ?? 0M).ToString("N2"))
                </nhs-summary-list-row>
                <nhs-summary-list-row label-text="Total cost for one year:" data-test-id="one-year-cost-summary">
                    £@((recurringOrderItems?.Sum(orderItem => orderItem.OrderItemPrice.CalculateCostPerYear(orderItem.TotalQuantity)) ?? 0M).ToString("N2"))
                </nhs-summary-list-row>
                <nhs-summary-list-row label-text="@(Model.Order.MaximumTerm.HasValue ? $"Total cost of contract ({Model.Order.MaximumTerm} months):" : "Total cost of contract:")" data-test-id="total-cost-summary">
                    £@((recurringOrderItems?.Sum(orderItem => orderItem.OrderItemPrice.CalculateTotalCostForContractLength(orderItem.TotalQuantity, Model.Order.MaximumTerm.GetValueOrDefault())) ?? 0M).ToString("N2"))
                </nhs-summary-list-row>
            </nhs-summary-list>
        }


        <br />
        <div class="nhsuk-grid-row">
            <div class="nhsuk-grid-column-two-thirds">
                    <vc:nhs-secondary-button text="Download PDF"
                                                use-primary-colour="false"
                                                url="@Url.Action(
                                                    nameof(OrderController.Download),
                                                    typeof(OrderController).ControllerName(),
                                                    new { Model.InternalOrgId, Model.Order.CallOffId })" />

                @if (Model.Order.OrderStatus == OrderStatus.InProgress && Model.Order.CanComplete())
                {
                    <br />
                    <form method="post">
                        <nhs-submit-button text="Complete order summary" />
                    </form>
                }
                else
                {
                    <br />
                    <vc:nhs-secondary-button
                        text="Continue"
                        use-primary-colour="true"
                        url="@Model.BackLink"/>
                }
            </div>
        </div>
    </div>
</div>

