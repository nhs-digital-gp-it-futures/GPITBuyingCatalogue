@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models;
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions;
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.DetailsAndExpander
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.Table
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers

@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models.AssociatedServicesModel
@{
    ViewBag.Title = "Solution Associated Services";
    var tieredPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Tiered)).ToList();
    var flatPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Flat)).ToList();
}

<div>
    <partial name="_solutionSummary" model="Model" />
    <p>Associated Services help you to implement or optimise the live operation of a Catalogue Solution or Additional Service, for example, training or data migration.</p>
    <p><strong>These are the Associated Services offered with this Catalogue Solution:</strong></p>

    @if (!Model.HasServices())
    {
        <h2>No Associated Services setup</h2>
    }
    else
    {
        <div data-test-id="associated-services-details">
            @foreach (var service in Model.Services)
            {
                <nhs-expander label-text="@service.Name" open="false">
                    @{
                        var priceSummaryModel = new MarketingPriceSummaryModel
                        {
                            SolutionId = Model.SolutionId,
                            OrderGuidance = service.AssociatedService.OrderGuidance,
                            PricePageUrl = Url.Action(
                                nameof(SolutionsController.AssociatedServicePrice),
                                typeof(SolutionsController).ControllerName(),
                                new { solutionId = Model.SolutionId, serviceId = service.Id }),
                            Prices = service.CataloguePrices,
                            ItemDescription = service.AssociatedService.Description,
                        };
                     }
                    <partial name="_MarketingPriceSummary" model="priceSummaryModel"/>
                </nhs-expander>
            }
        </div>
    }
</div>
