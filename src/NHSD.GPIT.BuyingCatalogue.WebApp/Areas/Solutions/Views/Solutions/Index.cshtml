@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Controllers;

@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models.SolutionsModel;
@{
    Layout = "~/Views/Shared/Layouts/_AllBannersLayout.cshtml";
    ViewBag.Title = Model.TitleText;
}

@section Breadcrumbs {
<nav class="nhsuk-breadcrumb" aria-label="Breadcrumb">
    <div class="nhsuk-width-container">
        <ol class="nhsuk-breadcrumb__list">
            <li class="nhsuk-breadcrumb__item">
                <a class="nhsuk-breadcrumb__link"
                   data-test-id="home-crumb"
                   asp-action="@nameof(HomeController.Index)"
                   asp-controller="@typeof(HomeController).ControllerName()"
                   asp-area="@typeof(HomeController).AreaName()">Home</a>
            </li>
            @if (Model.SearchCriteriaApplied)
            {
                <li class="nhsuk-breadcrumb__item">
                    <a class="nhsuk-breadcrumb__link"
                data-test-id="home-crumb"
                asp-action="@nameof(SolutionsController.Index)"
                asp-controller="@typeof(SolutionsController).ControllerName()"
                asp-area="@typeof(SolutionsController).AreaName()">Catalogue Solutions</a>
                </li>
                    @if (!string.IsNullOrWhiteSpace(Model.SearchSummary.SelectedCapabilityIds))
                    {
                    <li class="nhsuk-breadcrumb__item">
                        <a class="nhsuk-breadcrumb__link"
                    data-test-id="home-crumb"
                    asp-action="@nameof(FilterController.FilterCapabilities)"
                    asp-controller="@typeof(FilterController).ControllerName()"
                    asp-area="@typeof(FilterController).AreaName()"
                    asp-route-selectedCapabilityIds="@Model.SearchSummary.SelectedCapabilityIds"
                    asp-route-selectedEpicIds="@Model.SearchSummary.SelectedEpicIds"
                    asp-route-search="@Model.SearchSummary.SearchTerm">Filter Capabilities</a>
                    </li>
                }

                @if (!string.IsNullOrWhiteSpace(Model.SearchSummary.SelectedEpicIds)){
                    <li class="nhsuk-breadcrumb__item">
                        <a class="nhsuk-breadcrumb__link"
                    data-test-id="home-crumb"
                    asp-action="@nameof(FilterController.FilterEpics)"
                    asp-controller="@typeof(FilterController).ControllerName()"
                    asp-area="@typeof(FilterController).AreaName()"
                    asp-route-selectedCapabilityIds="@Model.SearchSummary.SelectedCapabilityIds"
                    asp-route-selectedEpicIds="@Model.SearchSummary.SelectedEpicIds"
                    asp-route-search="@Model.SearchSummary.SearchTerm">Filter Epics</a>
                    </li>
                }
            }
        </ol>
    </div>
</nav>
}

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-page-title title="@ViewBag.Title"
                        advice="@Model.AdviceText" />

        <vc:nhs-suggestion-search id="marketing-suggestion-search"
                                  ajax-url="@Url.Action(
                                                nameof(SolutionsController.FilterSearchSuggestions),
                                                typeof(SolutionsController).ControllerName())"
                                  title-text="Search for solution by solution name or supplier name"
                                  query-parameter-name="search"/>
        <br/>
        <vc:nhs-action-link text="Filter Catalogue Solutions"
                            url="@Url.Action(
                                nameof(FilterController.FilterCapabilities),
                                typeof(FilterController).ControllerName(),
                                new { SelectedCapabilityIds = Model.SearchSummary.SelectedCapabilityIds,
                                      SelectedEpicIds = Model.SearchSummary.SelectedEpicIds, 
                                      search = Model.SearchSummary.SearchTerm})" />


        @if (Model.SearchCriteriaApplied)
        {
            <hr />
            <h2 data-test-id="search-criteria-summary">@(SearchSummaryTitle(Model.PageOptions.TotalNumberOfItems))</h2>
            <br/>

            @if (!string.IsNullOrWhiteSpace(Model.SearchSummary.SearchTerm)){
                <h3 data-test-id="search-term-title">Search term:</h3>
                <p data-test-id="search-term-content">@($"'{Model.SearchSummary.SearchTerm}'")</p>
            }

            @if (Model.SearchSummary.CapabilitiesAndEpics.Count > 0)
            {
                <h3 data-test-id="filter-summary-title">@(FilterSummaryTitle(Model.SearchSummary.SelectedEpicIds))</h3>
                var filterContext = GetSearchSummary();
                <ul data-test-id="filter-summary-content">
                    @foreach (var item in filterContext)
                    {
                        <li>@item</li>
                    }
                </ul>
            }
            <p>
                <a  style="margin-right:20px;"
                    asp-area="@typeof(FilterController).AreaName()"
                    asp-controller="@typeof(FilterController).ControllerName()"
                    asp-action="@nameof(FilterController.FilterCapabilities)"
                    asp-route-selectedCapabilityIds="@Model.SearchSummary.SelectedCapabilityIds"
                    asp-route-selectedEpicIds="@Model.SearchSummary.SelectedEpicIds"
                    asp-route-search="@Model.SearchSummary.SearchTerm">
                    Edit Capabilities
                </a>

                <a asp-area="@typeof(FilterController).AreaName()"
                    asp-controller="@typeof(FilterController).ControllerName()"
                    asp-action="@nameof(FilterController.FilterEpics)"
                    asp-route-selectedCapabilityIds="@Model.SearchSummary.SelectedCapabilityIds"
                    asp-route-selectedEpicIds="@Model.SearchSummary.SelectedEpicIds"
                    asp-route-search="@Model.SearchSummary.SearchTerm">
                    Edit Epics
                </a>
            </p>

            <vc:nhs-secondary-button 
                type="Secondary" 
                url="@Url.Action(nameof(SolutionsController.Index), typeof(SolutionsController).ControllerName())" 
                text="Clear search criteria" />

            @if (Model.CatalogueItems.Count == 0)
            {
                <p id="no-results">
                    Try a different search term or change any filters you've selected.
                </p>
            }
        }

        @if (Model.CatalogueItems is not null && Model.CatalogueItems.Count > 0)
        {
            <form id="sort-form" method="post">

                <nhs-select asp-for="SelectedSortOption"
                        asp-items="@Model.SortOptions"
                        label-text="Sort by:"
                        use-default-value="false" />

                <nhs-submit-button text="Sort results" class="nhsuk-button--secondary" style="display:inline" />
            </form>

            <script type="text/javascript" src="@Url.Content("~/js/SolutionSort.min.js")" asp-append-version="true"></script>

            <hr />
            <div id="solutions-list">
                @foreach (var item in Model.CatalogueItems)
                {
                    <partial name="_SolutionSearchDisplay" model="@(item, Model.SearchSummary.CapabilitiesAndEpics)" />
                }
            </div>
            <div id="pagination">
                <nhs-page-number-pagination current-page-number="@Model.PageOptions.PageNumber"
                                        total-number-of-pages="@Model.PageOptions.NumberOfPages" />

			</div>
		}
    </div>
</div>

@{
    List<string> GetSearchSummary()
    {
        var searchSummary = new List<string>();

        var capabilities = Model.SearchSummary.CapabilitiesAndEpics;
        foreach (var capabilityContext in capabilities)
        {
            var capabilityText = capabilityContext.CapabilityName;
            var numberOfEpics = capabilityContext.CountOfEpics;
            if (numberOfEpics > 0)
            {
                capabilityText += $" and {numberOfEpics} {GetEpicDescriptor(numberOfEpics)}";
            }

            searchSummary.Add(capabilityText);
        }        

        return searchSummary;
    }

    static string GetEpicDescriptor(int numberOfEpics) => numberOfEpics == 1 ? "Epic" : "Epics";

    static string GetSolutionsDescriptor(int numberOfSolutions) => numberOfSolutions == 1 ? "Solution" : "Solutions";

    static string FilterSummaryTitle(string selectedEpicIds) =>
        string.IsNullOrEmpty(selectedEpicIds)
        ? "Selected Capabilities:"
        : "Selected Capabilities and Epics:";

    static string SearchSummaryTitle(int totalNumberOfItems) => 
        $"{totalNumberOfItems} Catalogue {GetSolutionsDescriptor(totalNumberOfItems)} found with this search criteria";
}
