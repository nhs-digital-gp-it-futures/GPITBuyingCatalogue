@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models

@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models.AdditionalServicesModel
@{
    ViewBag.Title = "Solution Additional Services";
    var tieredPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Tiered)).ToList();
    var flatPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Flat)).ToList();
}
<div>
    <p><strong>These are the Additional Services offered with this Catalogue Solution:</strong></p>

    <nhs-details label-text="What are Additional Services?">
        <p> Additional Services are add-ons that provide additional functionality to a Catalogue Solution for an extra cost. For example, enabling a Catalogue Solution to be used on a mobile device. </p>
    </nhs-details>

    @if (tieredPriceServices.Any())
    {
        <nhs-table label-text="Additional Services available at a tiered price" data-test-id="additional-services-tiered-table">
            <nhs-table-column>Additional Service</nhs-table-column>
            <nhs-table-column>Tier</nhs-table-column>
            <nhs-table-column>Price per unit</nhs-table-column>
            <nhs-table-column>Range</nhs-table-column>
            @foreach (var service in tieredPriceServices)
            {
                var price = service.CataloguePrices.First(p => p.CataloguePriceType == CataloguePriceType.Tiered);
                @for (var i = 0; i < price.CataloguePriceTiers.Count; i++)
                {
                    var tier = price.CataloguePriceTiers.ElementAt(i);
                    <nhs-table-row-container>
                        @if (i == 0)
                        {
                            <nhs-table-cell><a href="#@service.Id">@service.Name</a></nhs-table-cell>
                        }
                        else
                        {
                            <nhs-table-cell></nhs-table-cell>
                        }

                        <nhs-table-cell>Tier @(i + 1)</nhs-table-cell>
                        <nhs-table-cell>£@tier.Price.ToString("N4")</nhs-table-cell>
                        <nhs-table-cell>@tier.GetRangeDescription()</nhs-table-cell>
                    </nhs-table-row-container>
                }
            }
        </nhs-table>
    }

    @if (flatPriceServices.Any())
    {
        <nhs-table label-text="Additional Services available at a flat price" data-test-id="additional-services-flat-table">
            <nhs-table-column>Additional Service</nhs-table-column>
            <nhs-table-column>Price per unit</nhs-table-column>
            @foreach (var service in flatPriceServices)
            {
                var price = service.CataloguePrices.First(p => p.CataloguePriceType == CataloguePriceType.Flat);
                var tier = price.CataloguePriceTiers.First();
                    <nhs-table-row-container>
                        <nhs-table-cell><a href="#@service.Id">@service.Name</a></nhs-table-cell>
                        <nhs-table-cell>£@tier.Price.ToString("N4")</nhs-table-cell>
                    </nhs-table-row-container>
            }
        </nhs-table>
    }

    <div data-test-id="additional-services-details">
        @foreach (var service in Model.Services)
        {
            var price = service.CataloguePrices.First();
            <hr style="border-width: 4px;">
            <h3 id="@service.Id">
                @service.Name
            </h3>

            var priceSummaryModel = new MarketingPriceSummaryModel
            {
                SolutionId = Model.SolutionId,
                CapabilitiesAndEpicsUrl = Url.Action(
                    nameof(SolutionsController.CapabilitiesAdditionalServices),
                    typeof(SolutionsController).ControllerName(),
                    new { Model.SolutionId, additionalServiceId = service.Id }),
                Price = price,
                ItemDescription = service.AdditionalService.FullDescription,
            };
            <partial name="_MarketingPriceSummary" model="priceSummaryModel" />

            <partial name="_BackToTop" />
        }
    </div>
</div>
