@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models;
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models

@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models.AdditionalServicesModel
@{
    ViewBag.Title = "Solution Additional Services";
    var tieredPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Tiered)).ToList();
    var flatPriceServices = Model.Services.Where(ci => ci.CataloguePrices.Any(p => p.CataloguePriceType == CataloguePriceType.Flat)).ToList();
}
<div>
    <partial name="_solutionSummary" model="Model"/>
    <p>Additional Services are add-ons that provide additional functionality to a Catalogue Solution for an extra cost. For example, enabling a Catalogue Solution to be used on a mobile device.</p>
    <p><strong>These are the Additional Services offered with this Catalogue Solution:</strong></p>

    <div data-test-id="additional-services-details">
        @foreach (var service in Model.Services)
        {
            <nhs-expander label-text="@service.Name" open="false">

            @{var priceSummaryModel = new MarketingPriceSummaryModel
            {
                SolutionId = Model.SolutionId,
                CapabilitiesAndEpicsUrl = Url.Action(
                    nameof(SolutionsController.CapabilitiesAdditionalServices),
                    typeof(SolutionsController).ControllerName(),
                    new { Model.SolutionId, additionalServiceId = service.Id }),
                Prices = service.CataloguePrices,
                ItemDescription = service.AdditionalService.FullDescription,
            };}
            <partial name="_MarketingPriceSummary" model="priceSummaryModel" />
            </nhs-expander>
        }
    </div>
</div>
