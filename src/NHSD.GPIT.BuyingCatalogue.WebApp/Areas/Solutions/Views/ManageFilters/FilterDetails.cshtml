@using NHSD.GPIT.BuyingCatalogue.UI.Components.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Extensions
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Solutions
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.Components.NhsDeleteButton
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.SummaryList
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.Table
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Models.ManageFilters.FilterDetailsModel

@{
    Layout = "~/Views/Shared/Layouts/_AllBannersLayout.cshtml";
    ViewBag.Title = Model.Filter.Name;
}

<partial name="Partials/_BackLink" model="@Model" />

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-page-title title="@ViewBag.Title"
                        caption=@Model.OrganisationName 
                        advice="These are the details for this filter." />
        
        <h2 data-test-id="name-and-description">Name and description</h2>

        <nhs-summary-list>
            <nhs-summary-list-row label-text="Name">
                <p>
                    @Model.Filter.Name
                </p>
            </nhs-summary-list-row>
            <nhs-summary-list-row label-text="Description">
                <p>
                    @Model.Filter.Description
                </p>
            </nhs-summary-list-row>
        </nhs-summary-list>

        @if (Model.FilterContainsEpics)
        {
            <h2 data-test-id="capabilities-and-epics">Capabilities and Epics</h2>
            <nhs-table>
                <nhs-table-column>Capability</nhs-table-column>
                <nhs-table-column>Epic</nhs-table-column>
                @foreach (var capability in Model.GroupedCapabilities)
                {
                    <nhs-table-row-container>
                        <nhs-table-cell>
                            @capability.Key
                        </nhs-table-cell>
                        <nhs-table-cell>
                            @if (capability.Value is null || !capability.Value.Any())
                            {
                                <p>
                                    None selected
                                </p>
                            }
                            else
                            {
                                @if (capability.Value.Count() == 1)
                                {
                                    <p>
                                        @capability.Value.First().Name
                                    </p>
                                }
                                else
                                {
                                    @foreach (var epic in capability.Value)
                                    {
                                        <li>
                                            @epic.Name
                                        </li>
                                    }
                                }
                            }
                        </nhs-table-cell>
                    </nhs-table-row-container>
                }
            </nhs-table>
        }
        else
        {
            <h2 data-test-id="capabilities">Capabilities</h2>
            @foreach (var capability in Model.GroupedCapabilities)
            {
                <p>@capability.Key</p>
            }
        }

        @if (Model.FilterContainsAdditionalFilters)
        {
            <h2 data-test-id="additional-filters">Additional filters</h2>

            <nhs-summary-list>
                <nhs-summary-list-row label-text="Client application type">
                    @if (Model.Filter.FilterClientApplicationTypes is null || !Model.Filter.FilterClientApplicationTypes.Any())
                    {
                        <p>
                            None selected
                        </p>
                    }
                    else
                    {
                        @foreach (var item in Model.Filter.FilterClientApplicationTypes)
                        {
                            @if (Model.Filter.FilterClientApplicationTypes.Count == 1)
                            {
                                <p>
                                    @item.ClientApplicationType.Name()
                                </p>
                            }
                            else
                            {
                                <li>
                                    @item.ClientApplicationType.Name()
                                </li>
                            }
                        }
                    }
                </nhs-summary-list-row>
                <nhs-summary-list-row label-text="Framework">
                    @if (Model.Filter.Framework is null || string.IsNullOrEmpty(Model.Filter.Framework.ShortName))
                    {
                        <p>
                            None selected
                        </p>
                    }
                    else
                    {
                        <p>
                            @Model.Filter.Framework.ShortName
                        </p>
                    }
                </nhs-summary-list-row>
                <nhs-summary-list-row label-text="Hosting type">
                    @if (Model.Filter.FilterHostingTypes is null || !Model.Filter.FilterHostingTypes.Any())
                    {
                        <p>
                            None selected
                        </p>
                    }
                    else
                    {
                        @foreach (var item in Model.Filter.FilterHostingTypes)
                        {
                            @if (Model.Filter.FilterHostingTypes.Count == 1)
                            {
                                <p>
                                    @item.HostingType.Name()
                                </p>
                            }
                            else
                            {
                                <li>
                                    @item.HostingType.Name()
                                </li>
                            }
                        }
                    }
                </nhs-summary-list-row>
            </nhs-summary-list>
        }

        <h2 data-test-id="view-solutions">View solutions</h2>
        <p>
            The results will be based on solutions currently available that match to this filter.
        </p>
        <p>
            <a href="/" target="_blank">View results for this filter (opens in a new tab)</a>
        </p>
        <vc:nhs-delete-button url="@Url.Action(
                                       nameof(ManageFiltersController.DeleteFilter),
                                       typeof(ManageFiltersController).ControllerName(),
                                       new { Model.FilterId })"
                              text="Delete filter" />
    </div>
</div>
