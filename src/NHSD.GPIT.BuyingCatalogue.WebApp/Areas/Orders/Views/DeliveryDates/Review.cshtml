@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Routing
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Controllers
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Controllers.Contracts
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Models.Contracts.DeliveryDates.ReviewModel
@{
    ViewBag.Title = "Review planned delivery dates";
}

<partial name="Partials/_BackLink" model="Model" />

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-validation-summary />

        <nhs-page-title title="@ViewBag.Title"
                        caption="Order @Model.CallOffId"
                        advice="Review the planned delivery date for your solutions and services." />

        @if (Model.DeliveryDate != null)
        {
            var returnUrl = Url.Action(
                nameof(DeliveryDatesController.Review),
                typeof(DeliveryDatesController).ControllerName(),
                new { Model.InternalOrgId, Model.CallOffId });

            <p>
                <strong>Planned delivery date for the majority of Service Recipients:</strong>
                @GetFormattedDate(Model.DeliveryDate)
                <span>&nbsp;</span>
                <a id="change-delivery-date-link"
                   href="@Url.Action(
                             nameof(DeliveryDatesController.SelectDate),
                             typeof(DeliveryDatesController).ControllerName(),
                             new { Model.InternalOrgId, Model.CallOffId, returnUrl })">Edit</a>
            </p>
            <hr/>
        }
        
        @if (Model.SolutionId != null)
        {
            var catalogueItemId = Model.SolutionId.Value;
            var itemName = Model.OrderItemName(catalogueItemId);

            <h2>Catalogue Solution</h2>
            <vc:nhs-action-link text="Edit planned delivery dates for @itemName"
                                url="@Url.Action(
                                         nameof(DeliveryDatesController.EditDates),
                                         typeof(DeliveryDatesController).ControllerName(),
                                         new { Model.InternalOrgId, Model.CallOffId, catalogueItemId, source = RoutingSource.TaskList } )"/>

            foreach (var date in Model.OrderItemDates(catalogueItemId))
            {
                <nhs-expander label-text="@itemName"
                              secondary-text-title="Planned delivery date: "
                              secondary-text="@GetFormattedDate(date)"
                              bold-title="true"
                              colour-mode="BlackAndWhite"
                              open="true">
                    <nhs-table>
                        <nhs-table-column>Service Recipient</nhs-table-column>
                        <nhs-table-column>ODS code</nhs-table-column>
                        @foreach (var (odsCode, name) in Model.OrderItemRecipients(catalogueItemId, date))
                        {
                            <nhs-table-row-container>
                                <nhs-table-cell>@name</nhs-table-cell>
                                <nhs-table-cell>@odsCode</nhs-table-cell>
                            </nhs-table-row-container>
                        }
                    </nhs-table>
                </nhs-expander>
            }
        }
        
        @if (Model.AdditionalServiceIds.Any())
        {
            <h2>Additional Services</h2>

            @foreach (var catalogueItemId in Model.AdditionalServiceIds)
            {
                var itemName = Model.OrderItemName(catalogueItemId);

                <vc:nhs-action-link data-test-id="edit-service-dates-@catalogueItemId" 
                                text="Edit planned delivery dates for @itemName"
                                url="@Url.Action(
                                         nameof(DeliveryDatesController.EditDates),
                                         typeof(DeliveryDatesController).ControllerName(),
                                         new { Model.InternalOrgId, Model.CallOffId, catalogueItemId, source = RoutingSource.TaskList } )"/>

                foreach (var date in Model.OrderItemDates(catalogueItemId))
                {
                    <nhs-expander label-text="@itemName"
                                  secondary-text-title="Planned delivery date: "
                                  secondary-text="@GetFormattedDate(date)"
                                  bold-title="true"
                                  colour-mode="BlackAndWhite"
                                  open="true">
                        <nhs-table>
                            <nhs-table-column>Service Recipient</nhs-table-column>
                            <nhs-table-column>ODS code</nhs-table-column>
                            @foreach (var (odsCode, name) in Model.OrderItemRecipients(catalogueItemId, date))
                            {
                                <nhs-table-row-container>
                                    <nhs-table-cell>@name</nhs-table-cell>
                                    <nhs-table-cell>@odsCode</nhs-table-cell>
                                </nhs-table-row-container>
                            }
                        </nhs-table>
                    </nhs-expander>
                }
            }
        }
        
        @if (Model.AssociatedServiceIds.Any())
        {
            <h2>Associated Services</h2>

            @foreach (var catalogueItemId in Model.AssociatedServiceIds)
            {
                var itemName = Model.OrderItemName(catalogueItemId);

                <vc:nhs-action-link data-test-id="edit-service-dates-@catalogueItemId" 
                                    text="Edit planned delivery dates for @itemName"
                                    url="@Url.Action(
                                             nameof(DeliveryDatesController.EditDates),
                                             typeof(DeliveryDatesController).ControllerName(),
                                             new { Model.InternalOrgId, Model.CallOffId, catalogueItemId, source = RoutingSource.TaskList } )"/>

                foreach (var date in Model.OrderItemDates(catalogueItemId))
                {
                    <nhs-expander label-text="@itemName"
                                  secondary-text-title="Planned delivery date: "
                                  secondary-text="@GetFormattedDate(date)"
                                  bold-title="true"
                                  colour-mode="BlackAndWhite"
                                  open="true">
                        <nhs-table>
                            <nhs-table-column>Service Recipient</nhs-table-column>
                            <nhs-table-column>ODS code</nhs-table-column>
                            @foreach (var (odsCode, name) in Model.OrderItemRecipients(catalogueItemId, date))
                            {
                                <nhs-table-row-container>
                                    <nhs-table-cell>@name</nhs-table-cell>
                                    <nhs-table-cell>@odsCode</nhs-table-cell>
                                </nhs-table-row-container>
                            }
                        </nhs-table>
                    </nhs-expander>
                }
            }
        }
        
        <vc:nhs-secondary-button text="Continue"
                                 type="Primary"
                                 url="@Url.Action(
                                          nameof(OrderController.Order),
                                          typeof(OrderController).ControllerName(),
                                          new { Model.InternalOrgId, Model.CallOffId })"/>
    </div>
</div>

@{
    string GetFormattedDate(DateTime? date) => date.HasValue
        ? $"{date.Value:d MMMM yyyy}"
        : "No date entered";
}
