@using System.Linq;
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models;
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Extensions;
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.DetailsAndExpander
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.Table
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Models.SolutionSelection.Review.ReviewExpanderModel
@{
    var totalCostsRolledUp = Model.OrderItemPrice.CalculateTotalCostPerTier(Model.RolledUpTotalQuantity);
    var totalCostsPrevious = Model.OrderItemPrice.CalculateTotalCostPerTier(Model.PreviousTotalQuantity);
    var hasTieredPricing = Model.OrderItemPrice.CataloguePriceType is CataloguePriceType.Tiered;
    var hasServiceRecipientQuantities = Model.OrderItemPrice.IsPerServiceRecipient();
    var tableText = Model.IsAmendment ? "Pricing and total quantities" : "Pricing";
}

<nhs-expander label-text="@Model.CatalogueItem.Name"
              added-sticker="@Model.IsAmendment && @Model.IsOrderItemAdded"
			  colour-mode="BlackAndWhite"
			  open="true"
			  bold-title="true">
	<br/>
    <nhs-table label-text="Service Recipients">
        @if (Model.IsAmendment)
        {
            <nhs-table-column>Status</nhs-table-column>
        }
        <nhs-table-column>Recipient</nhs-table-column>
        <nhs-table-column>Quantity</nhs-table-column>
        @foreach (var recipient in Model.OrderItemRecipients)
        {
            <nhs-table-row-container>
                @if (Model.IsAmendment)
                {
                    <nhs-table-cell style="width: 50px;">
                        @if (Model.IsServiceRecipientAdded(recipient.OdsCode))
                        {
                            <div class="bc-c-task-list__task-status">
                                <strong class="nhsuk-tag nhsuk-tag--blue">Added</strong>
                            </div>
                        } 
                        else
                        {
                            <span aria-label="Existing"></span>
                        }
                    </nhs-table-cell>
                }
                <nhs-table-cell>
                    @recipient.Recipient.Name
                </nhs-table-cell>
                <nhs-table-cell>
                    @if (hasServiceRecipientQuantities)
                    {
                        @(recipient.Quantity.HasValue ? $"{recipient.Quantity:N0}" : "-")
                    }
                    else
                    {
                        @("N/A")
                    }
                </nhs-table-cell>
            </nhs-table-row-container>
        }
    </nhs-table>

    <nhs-table label-text="@tableText">
        @if (hasTieredPricing)
        {
            <nhs-table-column>Pricing Tier</nhs-table-column>
        }
        <nhs-table-column>Price per unit</nhs-table-column>
        @if (Model.IsAmendment) {
            <nhs-table-column>Old quantity</nhs-table-column>
            <nhs-table-column>New quantity</nhs-table-column>
            <nhs-table-column>Old price</nhs-table-column>
            <nhs-table-column>New price</nhs-table-column>
        } else {
            <nhs-table-column>Quantity</nhs-table-column>
        }
        @for (var i = 0; i < totalCostsRolledUp.Count; i++)
        {
            <nhs-table-row-container>
                @if (hasTieredPricing)
                {
                    <nhs-table-cell>
                        Tier @totalCostsRolledUp[i].Id
                    </nhs-table-cell>
                }
                <nhs-table-cell>
                    £@($"{totalCostsRolledUp[i].Price:#,###,##0.00##}") @Model.OrderItemPrice.ToPriceUnitString()
                </nhs-table-cell>
                @if (Model.IsAmendment)
                {
                    <nhs-table-cell>
                        @(
                            totalCostsPrevious[i].Quantity == 0
                              ? "N/A"
                              : $"{totalCostsPrevious[i].Quantity:N0}"
                        )
                    </nhs-table-cell>
                }
                <nhs-table-cell>
                    @($"{totalCostsRolledUp[i].Quantity:N0}")
                </nhs-table-cell>
                @if (Model.IsAmendment)
                {
                    <nhs-table-cell>
                        @(
                            totalCostsPrevious[i].Cost == 0
                              ? "N/A"
                              : $"£{totalCostsPrevious[i].Cost:N2}"
                        )
                    </nhs-table-cell>
                    <nhs-table-cell>
                        £@($"{totalCostsRolledUp[i].Cost:N2}")
                    </nhs-table-cell>
                }
            </nhs-table-row-container>
        }
    </nhs-table>
</nhs-expander>
