@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers;
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Models.SolutionSelection.Shared.SelectSolutionModel;

<partial name="Partials/_BackLink" model="Model" />

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-validation-summary RadioId="SelectedCatalogueSolutionId" />

        @{
            var title = Model.OrderType.AssociatedServicesOnly
            ? "Which Catalogue Solution does the service help implement?"
            : "Catalogue Solutions";

            const string prefix = "These are the Catalogue Solutions provided by the supplier you’ve chosen. Select the one you want ";

            var suffix = Model.AdditionalServices?.Any() ?? false
            ? "and any of its Additional Services you want to order."
            : "to order.";

            var associatedServiceAdvice = Model.CatalogueSolutions.Count > 1
            ? "Select the Catalogue Solution the Associated Service you want to order supports."
            : "There is only one solution with this type of Associated Service.";

            var advice = Model.OrderType.AssociatedServicesOnly
            ? associatedServiceAdvice
            : $"{prefix}{suffix}";

            var caption = Model.OrderType.AssociatedServicesOnly
            ? $"Order {Model.CallOffId}"
            : Model.SupplierName;

            var submitButton = string.Empty; // uses the default text
        }

        <nhs-page-title title="@title"
                        caption="@caption"
                        advice="@advice" />

        <form method="post">
            <input type="hidden" asp-for="@Model.SupplierName" />

            @if (Model.OrderType.AssociatedServicesOnly)
            {
                if (Model.CatalogueSolutions.Count > 1)
                {

                    <h3>Which Catalogue Solution is the service linked with?</h3>
                    if (Model.OrderType.MergerOrSplit)
                    {
                        <p>These are the solutions from this supplier that have Associated Services supporting mergers or splits.</p>
                    }
                    else
                    {
                        <p>These are the solutions from this supplier that have Associated Services.</p>
                    }
                }
                else
                {
                    submitButton = "Confirm solution";

                    <input type="hidden"
                           asp-for="SelectedCatalogueSolutionId"
                           value="@Model.CatalogueSolutions[0].Value" />

                    <nhs-summary-list>
                        <nhs-summary-list-row label-text="Solution">
                            @Model.CatalogueSolutions[0].Text
                        </nhs-summary-list-row>
                    </nhs-summary-list>
                }
            }

            @if (!Model.OrderType.AssociatedServicesOnly
            || Model.OrderType.AssociatedServicesOnly && Model.CatalogueSolutions.Count > 1)
            {
                <nhs-fieldset-form-label asp-for="@Model">
                    <nhs-radio-button-container>
                        @foreach (var (selectListItem, i) in Model.CatalogueSolutions.Select((x, i) => (x, i)))
                        {
                            <nhs-radio-button asp-for="SelectedCatalogueSolutionId"
                                              display-name="Text"
                                              index="i"
                                              value="selectListItem"
                                              value-name="Value">
                                @if (Model.AdditionalServices.Any(x => $"{x.CatalogueItemId}".StartsWith(selectListItem.Value)))
                                {
                                    <p><strong>Do you want to add any Additional Services?</strong></p>
                                    <p>These are optional add-ons to the main solution that provide extra functionality.</p>
                                    <p>
                                        <a href="@Url.Action(
                                            nameof(SolutionsController.AdditionalServices),
                                            typeof(SolutionsController).ControllerName(),
                                            new { solutionId = Model.SelectedCatalogueSolutionId, area = typeof(SolutionsController).AreaName() })" target="_blank">
                                            Find out more (opens in new tab) 
                                        </a>
                                    </p>
                                    <nhs-checkbox-container>
                                        @foreach (var (service, j) in Model.AdditionalServices.Select((x, j) => (x, j)))
                                        {
                                            if (!$"{service.CatalogueItemId}".StartsWith(selectListItem.Value))
                                                continue;

                                            <input type="hidden" asp-for="@Model.AdditionalServices[j].CatalogueItemId" />
                                            <input type="hidden" asp-for="@Model.AdditionalServices[j].Description" />
                                            <nhs-checkbox asp-for="@Model.AdditionalServices[j].IsSelected"
                                                          label-text="@service.Description" />
                                        }
                                    </nhs-checkbox-container>
                                }
                            </nhs-radio-button>
                        }
                    </nhs-radio-button-container>
                </nhs-fieldset-form-label>
            }

            <div class="nhsuk-u-margin-top-9">
                <nhs-submit-button text="@submitButton" />
            </div>
        </form>
    </div>
</div>
