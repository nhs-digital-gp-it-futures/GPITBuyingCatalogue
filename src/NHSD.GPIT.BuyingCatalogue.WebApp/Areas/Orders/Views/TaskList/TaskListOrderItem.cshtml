@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Enums
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Routing
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Controllers.Contracts
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Controllers.SolutionSelection
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Models.SolutionSelection.TaskList.TaskListOrderItemModel;
@{
    const RoutingSource source = RoutingSource.TaskList;
}

<nhs-table label-text="@Model.Name" >
    <nhs-table-column>Section</nhs-table-column>
    <nhs-table-column>Status</nhs-table-column>
    <nhs-table-column>Action</nhs-table-column>

    <nhs-table-row-container>
        <nhs-table-cell>Price</nhs-table-cell>
        <nhs-table-cell>
            <nhs-tag status-enum="@Model.PriceStatus" />
        </nhs-table-cell>
        <nhs-table-cell>
            @if (Model.IsAmendment
            && Model.FromPreviousRevision)
            {
                <a id="Price_@Model.CatalogueItemId"
                   href="@Url.Action(
                             nameof(PricesController.ViewPrice),
                             typeof(PricesController).ControllerName(),
                             new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, source })">View</a>
            }
            else
            {
                @if (Model.PriceStatus == TaskProgress.NotStarted)
                {
                    if (Model.NumberOfPrices == 1)
                    {
                        <a id="Price_@Model.CatalogueItemId"
                           href="@Url.Action(
                                     nameof(PricesController.ConfirmPrice),
                                     typeof(PricesController).ControllerName(),
                                     new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, Model.PriceId, source })">Edit</a>
                    }
                    else
                    {
                        <a id="Price_@Model.CatalogueItemId"
                           href="@Url.Action(
                                     nameof(PricesController.SelectPrice),
                                     typeof(PricesController).ControllerName(),
                                     new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, source })">Edit</a>
                    }
                }

                @if (Model.PriceStatus == TaskProgress.Completed)
                {
                    <a id="Price_@Model.CatalogueItemId"
                       href="@Url.Action(
                                 nameof(PricesController.EditPrice),
                                 typeof(PricesController).ControllerName(),
                                 new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, source })">Edit</a>
                }
            }
        </nhs-table-cell>
    </nhs-table-row-container>

    <nhs-table-row-container>
        <nhs-table-cell>Quantity</nhs-table-cell>
        <nhs-table-cell>
            <nhs-tag status-enum="@Model.QuantityStatus" />
        </nhs-table-cell>
        <nhs-table-cell>
            @if (Model.QuantityStatus != TaskProgress.CannotStart)
            {
                if (Model.IsAmendment && Model.FromPreviousRevision && !Model.HasNewRecipients && Model.QuantityStatus != TaskProgress.InProgress)
                {
                    <a id="Quantity_@Model.CatalogueItemId" 
                       href="@Url.Action(
                                 nameof(QuantityController.ViewOrderItemQuantity),
                                 typeof(QuantityController).ControllerName(),
                                 new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId })">View</a>
                }
                else
                {
                <a id="Quantity_@Model.CatalogueItemId"
                   href="@Url.Action(
                                 nameof(QuantityController.SelectQuantity),
                                 typeof(QuantityController).ControllerName(),
                                 new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, source })">Edit</a>
                }
            }
        </nhs-table-cell>
    </nhs-table-row-container>
    @if (Model.IsAmendment && (Model.HasNewRecipients || !Model.FromPreviousRevision || Model.DeliveryDatesStatus == TaskProgress.InProgress))
    {
        <nhs-table-row-container>
            <nhs-table-cell>Planned delivery dates</nhs-table-cell>
            <nhs-table-cell>
                <nhs-tag status-enum="@Model.DeliveryDatesStatus" />
            </nhs-table-cell>
            <nhs-table-cell>
                @if (Model.DeliveryDatesStatus != TaskProgress.NotApplicable
               && Model.DeliveryDatesStatus != TaskProgress.CannotStart)
                {
                    <a id="Quantity_@Model.CatalogueItemId"
                       href="@Url.Action(
                                 nameof(DeliveryDatesController.AmendDate),
                                 typeof(DeliveryDatesController).ControllerName(),
                                 new { Model.InternalOrgId, Model.CallOffId, Model.CatalogueItemId, source })">Edit</a>
                }
            </nhs-table-cell>
        </nhs-table-row-container>
    }
</nhs-table>
