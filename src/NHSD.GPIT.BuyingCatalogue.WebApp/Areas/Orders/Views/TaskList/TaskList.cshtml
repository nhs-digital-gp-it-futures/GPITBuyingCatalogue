@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Ordering.Models
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Routing
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Controllers.SolutionSelection
@model NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Orders.Models.SolutionSelection.TaskList.TaskListModel

@{
    ViewBag.Title = Model.Title;
}

<partial name="Partials/_BackLink" model="Model" />

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-two-thirds">
        <nhs-validation-summary />
        <nhs-page-title model="Model" />

        @if (Model.OrderType.MergerOrSplit)
        {
            if (Model.AlternativeSolutionsAvailable)
            {
                <vc:nhs-action-link text="Change Catalogue Solution"
                                    url="@Url.Action(
                                             nameof(CatalogueSolutionsController.EditSolution),
                                             typeof(CatalogueSolutionsController).ControllerName(),
                                             new { Model.InternalOrgId, Model.CallOffId })" />

            }
        }
        else
        {
            <div id="SolutionDetails" class="nhsuk-u-margin-bottom-9">
                <h2>Catalogue Solution</h2>

                @if (Model.OrderType.Value == OrderTypeEnum.AssociatedServiceOther)
                {
                    <h3>@Model.SolutionName</h3>
                }

                @if (Model.CatalogueSolution != null)
                {
                    <nhs-card>
                        <partial name="TaskListOrderItem"
                                 model="@Model.OrderItemModel(Model.CatalogueSolution.CatalogueItemId)" />

                        @if (!Model.IsAmendment)
                        {
                            <a href="@Url.Action(
                                nameof(CatalogueSolutionsController.EditSolution),
                                typeof(CatalogueSolutionsController).ControllerName(),
                                new { Model.InternalOrgId, Model.CallOffId })">Change Catalogue Solution</a>
                        }
                    </nhs-card>
                }
            </div>
        }

        @if (!Model.OrderType.AssociatedServicesOnly)
        {
            <div id="AdditionalServiceDetails" class="nhsuk-u-margin-bottom-9">
                <h2>Additional Services</h2>
                <nhs-card>
                    @if (Model.AdditionalServices.Any())
                    {
                        @foreach (var service in Model.AdditionalServices)
                        {
                            <partial name="TaskListOrderItem"
                            model="@Model.OrderItemModel(service.CatalogueItemId)" />
                            <vc:nhs-delete-button url="@Url.Action(nameof(CatalogueSolutionsController.RemoveService),
                                                                    typeof(CatalogueSolutionsController).ControllerName(),
                                                                    new { Model.InternalOrgId, Model.CallOffId, service.CatalogueItemId })"
                            text="Remove @service.CatalogueItem.Name" />
                            <hr class="nhsuk-section-break nhsuk-section-break--m nhsuk-section-break--visible">
                        }
                    }
                    else
                    {
                        <p>No Additional Services have been added to this order yet.</p>
                    }

                    @if (Model.AdditionalServicesAvailable)
                    {
                        <span data-test-id="additional-services-action">
                            <a href="@Url.Action(
                                nameof(AdditionalServicesController.SelectAdditionalServices),
                                typeof(AdditionalServicesController).ControllerName(),
                                new { Model.InternalOrgId, Model.CallOffId })">@Model.AdditionalServicesActionText</a>
                        </span>
                    }
                    else
                    {
                        <p>There are no Additional Services available for this Catalogue Solution.</p>
                    }
                </nhs-card>
            </div>
        }

        @if (!Model.IsAmendment)
        {
            <div id="AssociatedServiceDetails" class="nhsuk-u-margin-bottom-9">
                @if (!Model.OrderType.MergerOrSplit)
                {
                    <h2>Associated Services</h2>
                }

                <nhs-card>
                    @if (Model.AssociatedServices.Any())
                    {
                        @foreach (var service in Model.AssociatedServices)
                        {
                            <partial name="TaskListOrderItem"
                                        model="@Model.OrderItemModel(service.CatalogueItemId)" />
                            @if (!Model.OrderType.MergerOrSplit)
                            {
                                <vc:nhs-delete-button url="@Url.Action(nameof(CatalogueSolutionsController.RemoveService),
                                                                        typeof(CatalogueSolutionsController).ControllerName(),
                                                                        new { Model.InternalOrgId, Model.CallOffId, service.CatalogueItemId })"
                                text="Remove @service.CatalogueItem.Name" />
                                <hr class="nhsuk-section-break nhsuk-section-break--m nhsuk-section-break--visible">
                            }
                        }
                    }
                    else
                    {
                        <p>No Associated Services have been added to this order yet.</p>
                    }

                    @if (!Model.OrderType.MergerOrSplit)
                    {
                        @if (Model.AssociatedServicesAvailable)
                        {
                            <span data-test-id="associated-services-action">
                                <a href="@Url.Action(
                                    nameof(AssociatedServicesController.SelectAssociatedServices),
                                    typeof(AssociatedServicesController).ControllerName(),
                                    new { Model.InternalOrgId, Model.CallOffId, source = RoutingSource.TaskList })">@Model.AssociatedServicesActionText</a>
                            </span>
                        }
                        else
                        {
                            <p>There are no Associated Services available for this Catalogue Solution.</p>
                        }
                    }
                </nhs-card>
            </div>
        }

        <vc:nhs-secondary-button text="Continue"
                                 url="@Model.OnwardLink"
                                 type="Primary" />
    </div>
</div>
