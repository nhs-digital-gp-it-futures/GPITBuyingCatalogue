@model InteroperabilityScoringModel

@{
    ViewBag.Title = "Compare and score interoperability";
}

<partial name="Partials/_BackLink" model="Model"/>

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-two-thirds">

        <nhs-validation-summary/>

        <nhs-page-title title="@ViewBag.Title"
                        advice="Compare and score shortlisted solutions based on your interoperability criteria."
                        caption="@Model.CompetitionName"/>

        <partial name="_ScoringGuidancePartial"/>

        <h2>Your interoperability criteria</h2>

        <nhs-card>
            @foreach (var integration in Model.AvailableIntegrations.OrderBy(x => x.Key))
            {
                var selectedIntegrationTypes = Model.IntegrationTypes.Where(x => x.IntegrationId == integration.Key).OrderBy(x => x.Name).ToList();

                <h3>@(integration.Value) integrations</h3>
                <nhs-summary-list>
                    <nhs-summary-list-row label-text="Integration type">
                        @if (!selectedIntegrationTypes.Any())
                        {
                            <span>None selected</span>
                        }
                        else
                        {
                            <ul>
                                @foreach (var selectedIntegration in selectedIntegrationTypes.OrderBy(x => x.Name))
                                {
                                    <li>@selectedIntegration.Name</li>
                                }
                            </ul>
                        }
                    </nhs-summary-list-row>
                </nhs-summary-list>
            }
        </nhs-card>
    </div>
</div>

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <form method="post">
            <input type="hidden" asp-for="CompetitionName"/>
            <input type="hidden" asp-for="BackLink"/>
            @for (var i = 0; i < Model.SolutionScores.Count; i++)
            {
                var solutionScoreModel = Model.SolutionScores[i];
                var solutionName = solutionScoreModel.Solution.CatalogueItem.Name;

                <h2>@solutionName</h2>
                <nhs-expander label-text="View @solutionName interoperability details" open="true">
                    <b>This is how this Catalogue Solution works with other systems:</b>
                    <br/>
                    <br/>

                    @foreach (var integration in Model.AvailableIntegrations.OrderBy(x => x.Key))
                    {
                        var solutionIntegrations = solutionScoreModel.Solution.Integrations
                            .Where(x => x.IntegrationType.IntegrationId == integration.Key)
                            .GroupBy(x => x.IntegrationType.Name)
                            .OrderBy(x => x.Key)
                            .ToList();

                        <h3>@(integration.Value) integrations</h3>

                        if (solutionIntegrations.Count == 0)
                        {
                            <p>This solution has no @integration.Value integrations listed</p>
                        }
                        else
                        {
                            foreach (var solutionIntegration in solutionIntegrations)
                            {
                                var supportsProviderOrConsumer = solutionIntegration.Any(x => x.IsConsumer.HasValue);
                                var hasSystemIntegration = solutionIntegration.Any(x => !string.IsNullOrWhiteSpace(x.IntegratesWith));

                                <nhs-table label-text="@solutionIntegration.Key">
                                    @if (supportsProviderOrConsumer)
                                    {
                                        <nhs-table-column>Provider or consumer</nhs-table-column>
                                    }
                                    @if (hasSystemIntegration)
                                    {
                                        <nhs-table-column>System integrating with</nhs-table-column>
                                    }
                                    <nhs-table-column>Description</nhs-table-column>

                                    @foreach (var specificIntegration in solutionIntegration.OrderBy(x => x.IsConsumer).ThenBy(x => x.IntegratesWith))
                                    {
                                        <nhs-table-row-container>
                                            @if (supportsProviderOrConsumer)
                                            {
                                                <nhs-table-cell>@(specificIntegration.IsConsumer.GetValueOrDefault() ? "Consumer" : "Provider")</nhs-table-cell>
                                            }
                                            @if (hasSystemIntegration)
                                            {
                                                <nhs-table-cell>@specificIntegration.IntegratesWith</nhs-table-cell>
                                            }
                                            <nhs-table-cell>@(specificIntegration.Description ?? specificIntegration.IntegrationType.Description)</nhs-table-cell>
                                        </nhs-table-row-container>
                                    }
                                </nhs-table>

                            }
                        }
                    }

                    <nhs-fieldset-form-label asp-for="@Model.SolutionScores[i]"
                                             label-text="What score would you give this solution?"
                                             label-hint="Score each solution between 1 and 5. The higher the score, the better you think a solution meets your needs." size="Medium">
                        <input type="hidden" asp-for="@Model.SolutionScores[i].SolutionId"/>
                        <nhs-input asp-for="@Model.SolutionScores[i].Score" input-width="Three"/>
                    </nhs-fieldset-form-label>
                    <nhs-fieldset-form-label asp-for="@Model.SolutionScores[i]"
                                             label-text="Why have you given this score?"
                                             label-hint="Provide a justification for the score you have given this solution." size="Medium">
                        <input type="hidden" asp-for="@Model.SolutionScores[i].SolutionId"/>
                        <nhs-textarea asp-for="@Model.SolutionScores[i].Justification"/>
                    </nhs-fieldset-form-label>

                </nhs-expander>

                @if (i == Model.SolutionScores.Count - 1)
                {
                    <br/>
                    <nhs-button-group>
                        <nhs-submit-button/>

                        <vc:nhs-secondary-button text="Download interoperability comparison (PDF)"
                                             url="@Model.PdfUrl"
                                             type="Secondary" />
                    </nhs-button-group>
                }
                <hr/>
            }
        </form>
    </div>
</div>
