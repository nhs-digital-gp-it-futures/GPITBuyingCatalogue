@model SelectSolutionsModel

@{
    var solution = Model.Solutions.First();
}

<nhs-inset-text>
    <p>Your selected filter has only returned 1 result. You therefore do not need to carry out a competition and can instead use a direct award to procure this solution.</p>
</nhs-inset-text>

<h3 class="nhsuk-heading-s">
    <a asp-action="@nameof(SolutionsController.Description)"
       asp-controller="@typeof(SolutionsController).ControllerName()"
       asp-area="@typeof(SolutionsController).AreaName()"
       asp-route-solutionId="@solution.SolutionId"
       target="_blank">
        @solution.SolutionName (opens in a new tab)
    </a>
    <span class="nhsuk-caption-m nhsuk-caption--bottom>">@solution.SupplierName</span>
</h3>
<h4 class="nhsuk-heading-xs nhsuk-u-margin-bottom-2">Additional Services required:</h4>
<p class="nhsuk-body">@solution.GetAdditionalServicesList()</p>

<form method="post">
    <input type="hidden" asp-for="BackLink"/>
    <input type="hidden" asp-for="BackLinkText"/>
    <input type="hidden" asp-for="CompetitionName"/>
    <input type="hidden" asp-for="FrameworkName" />
    <input type="hidden" asp-for="ReviewFilter.FilterDetails.Capabilities" />
    <input type="hidden" asp-for="ReviewFilter.FilterDetails.FrameworkName" />
    <input type="hidden" asp-for="ReviewFilter.InExpander" />
    <input type="hidden" asp-for="@Model.Solutions[0].SolutionId" />
    <input type="hidden" asp-for="@Model.Solutions[0].SolutionName" />
    <input type="hidden" asp-for="@Model.Solutions[0].SupplierName" />
    <input type="hidden" asp-for="@Model.Solutions[0].RequiredServices" />
    <input type="hidden" asp-for="@Model.Solutions[0].Summary" />
    @for (int i = 0; i < Model.ReviewFilter.FilterDetails.ApplicationTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.ReviewFilter.FilterDetails.ApplicationTypes[i])
    }
    @for (int i = 0; i < Model.ReviewFilter.FilterDetails.HostingTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.ReviewFilter.FilterDetails.HostingTypes[i])
    }
    @for (int i = 0; i < Model.ReviewFilter.FilterDetails.InteropIntegrationTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.ReviewFilter.FilterDetails.InteropIntegrationTypes[i])
    }
    @for (int i = 0; i < Model.ReviewFilter.FilterDetails.InteropIm1IntegrationsTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.ReviewFilter.FilterDetails.InteropIm1IntegrationsTypes[i])
    }
    @for (int i = 0; i < Model.ReviewFilter.FilterDetails.InteropIm1IntegrationsTypes.Count; i++)
    {
        @Html.HiddenFor(m => m.ReviewFilter.FilterDetails.InteropGpConnectIntegrationsTypes[i])
    }

    @for (var x = 0; x < Model.Solutions[0].RequiredServices.Count; x++)
    {
        <input type="hidden" asp-for="@Model.Solutions[0].RequiredServices[x]"/>
    }

    <nhs-fieldset-form-label asp-for="DirectAwardOptions"
                             label-text="Do you want to use a direct award?">
        <nhs-radio-buttons asp-for="IsDirectAward" values="@Model.DirectAwardOptions.Cast<object>()"
                           value-name="Value"
                           display-name="Text"
                           hint-name="Advice"/>
    </nhs-fieldset-form-label>

    <nhs-submit-button/>
</form>
