@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Admin.Models.ListPriceModels
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Admin.Controllers
@using NHSD.GPIT.BuyingCatalogue.Framework.Extensions
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Catalogue.Models
@model EditListPriceStatusModel

@{
    ViewBag.Title = Model!.Title;
}

<partial name="Partials/_BackLink" model="Model" />
<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-two-thirds">
        <nhs-validation-summary />
        <nhs-page-title title="@ViewBag.Title"
                        caption="@Model.SolutionName"
                        advice="@Model.Advice" />
        <form method="post">
            <input type="hidden" asp-for="CataloguePriceId" />
            <input type="hidden" asp-for="SolutionName" />
            <input type="hidden" asp-for="BackLinkText" />
            <input type="hidden" asp-for="BackLink" />
            <input type="hidden" asp-for="Title" />
            <input type="hidden" asp-for="CatalogueItemId" />
            <input type="hidden" asp-for="Advice" />
            <input type="hidden" asp-for="ListPriceId" />
            
            <nhs-fieldset-form-label asp-for="@Model">
                <nhs-radio-buttons asp-for="Status"
                                   values="Model.AvailableStatuses.Cast<object>()"
                                   value-name="EnumMemberName"
                                   display-name="Description" />
            </nhs-fieldset-form-label>
            
            @if (Model.Status is PublicationStatus.Published or PublicationStatus.Unpublished)
            {
                var url = Model.CalledFrom switch
                {
                    EditListPriceSource.CatalogueSolution => Url.Action(
                        nameof(ListPriceController.AddListPrice),
                        typeof(ListPriceController).ControllerName(),
                        new { solutionId = Model.CatalogueItemId, basedOn = Model.ListPriceId }),

                    EditListPriceSource.AdditionalService => Url.Action(
                        nameof(AdditionalServicesController.AddListPrice),
                        typeof(AdditionalServicesController).ControllerName(),
                        new { solutionId = Model.RelatedCatalogueItemId, additionalServiceId = Model.CatalogueItemId, basedOn = Model.ListPriceId }),

                    EditListPriceSource.AssociatedService => Url.Action(
                        nameof(AssociatedServicesController.AddListPrice),
                        typeof(AssociatedServicesController).ControllerName(),
                        new { solutionId = Model.RelatedCatalogueItemId, associatedServiceId = Model.CatalogueItemId, basedOn = Model.ListPriceId }),

                    _ => throw new ArgumentOutOfRangeException(),
                };

                <div class="nhsuk-inset-text">
                    <span class="nhsuk-u-visually-hidden">Information: </span>
                    <h3>Create new list price</h3>
                    <p>
                        <a href="@url">Create a new list price</a>
                        populated with the values from this price which you can then edit.
                    </p>
                </div>
            }

            <nhs-submit-button />
        </form>
    </div>
</div>
