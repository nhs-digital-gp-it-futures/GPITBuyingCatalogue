@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Extensions
@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Ordering.Models
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.InsetText
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.TagHelpers.Table
@using NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.Quantities
@using ValidationSummaryTagHelper = NHSD.GPIT.BuyingCatalogue.UI.Components.TagHelpers.ValidationSummaryTagHelper
@model NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.Quantities.SelectServiceRecipientQuantityModel

@{
    ViewBag.Title = Model.Title;
    var inputRequired = false;
}
<partial name="Partials/_BackLink" model="Model" />

<div class="nhsuk-grid-row" data-test-id="perServiceRecipient">
    <div class="nhsuk-grid-column-two-thirds">
        <nhs-validation-summary exclude-child-errors="true"/>
        <nhs-page-title model="Model" />

        @if (Model.ShouldShowInset)
        {
            <nhs-inset-text>
                <p>
                    The latest practice list sizes are published on
                    <a href="https://digital.nhs.uk/data-and-information/publications/statistical/patients-registered-at-a-gp-practice"
                       target="_blank">the NHS website (opens in a new tab)</a>.
                </p>
            </nhs-inset-text>
        }

        <form method="post">
            <hidden-inputs title="Title" caption="Caption" advice="Advice" />
            <input type="hidden" asp-for="@Model.BackLink" />
            <input type="hidden" asp-for="@Model.Source" />
            <input type="hidden" asp-for="@Model.ProvisioningType" />
            <input type="hidden" asp-for="@Model.BillingPeriod" />
            @if (Model.OrderType != null)
            {
                <input type="hidden" asp-for="@Model.OrderType.Value" name="@nameof(Model.OrderType)" />
            }

            @if (Model.OrderType?.MergerOrSplit ?? false)
            {
                var tobeValue = Model.OrderType.Value switch
                {
                    OrderTypeEnum.AssociatedServiceSplit => "split",
                    OrderTypeEnum.AssociatedServiceMerger => "retained",
                    _ => throw new InvalidOperationException("Expected only merger or split")
                };


                <h2 class="nhsuk-heading-s">
                    Service Recipient to be @tobeValue: @Model.PracticeReorganisationRecipient
                </h2>

                var perValue = Model.OrderType.Value switch
                {
                    OrderTypeEnum.AssociatedServiceSplit => "per receiving practice",
                    OrderTypeEnum.AssociatedServiceMerger => "per merging practice",
                    _ => "per practice"
                };

                <h2 class="nhsuk-heading-s">
                    @($"Quantity {perValue} {Model.BillingPeriod?.Description() ?? string.Empty}")
                </h2>
            }

            @for (var i=0; i < Model.SubLocations.Length; i++)
            {
                <input type="hidden" asp-for="@Model.SubLocations[i].Name" />

                var id = $"SubLocations_{i}_";
                <nhs-expander id="@id" label-text="@Model.SubLocations[i].Name" secondary-text-title="@Model.SubLocations[i].ServiceRecipients.Length.ToString()" secondary-text=" recipients added" bold-title="true" open="true">
                    <nhs-table data-test-id="additional-service-dashboard-table">
                        <nhs-table-column>Organisation </nhs-table-column>
                        <nhs-table-column>ODS code</nhs-table-column>
                        <nhs-table-column>@Model.QuantityColumnTitle</nhs-table-column>

                        @foreach (var recipient in Model.SubLocations[i].ServiceRecipients)
                        {
                            var index = Array.FindIndex(Model.SubLocations[i].ServiceRecipients, x => x.OdsCode.Contains(recipient.OdsCode));
                            <nhs-table-row-container>
                                <nhs-table-cell>
                                    <input type="hidden" asp-for="@Model.SubLocations[i].ServiceRecipients[index].Name" />
                                    <input type="hidden" asp-for="@Model.SubLocations[i].ServiceRecipients[index].OdsCode" />
                                    <input type="hidden" asp-for="@Model.SubLocations[i].ServiceRecipients[index].Quantity" />
                                    <div style="margin-top: 6px">
                                        @Model.SubLocations[i].ServiceRecipients[index].Name
                                    </div>
                                </nhs-table-cell>
                                <nhs-table-cell>
                                    <div style="margin-top: 6px">
                                        @Model.SubLocations[i].ServiceRecipients[index].OdsCode
                                    </div>
                                </nhs-table-cell>
                                <nhs-table-cell>
                                    @if (Model.SubLocations[i].ServiceRecipients[index].Quantity > 0 && (Model.OrderType?.MergerOrSplit ?? false))
                                    {
                                        <input type="hidden" asp-for="@Model.SubLocations[i].ServiceRecipients[index].InputQuantity" />
                                        @($"{Model.SubLocations[i].ServiceRecipients[index].Quantity:N0}")
                                    }
                                    else
                                    {
                                        inputRequired = true;
                                        <nhs-input asp-for="@Model.SubLocations[i].ServiceRecipients[index].InputQuantity"
                                                   input-width="Five"
                                                   data-test-id="input_quantity" />
                                    }
                                </nhs-table-cell>
                            </nhs-table-row-container>
                        }
                    </nhs-table>
                </nhs-expander>
            }

            @if (Model.PreviouslySelected?.Any() ?? false)
            {
                <div id="previously-selected-quantities">
                    <nhs-details label-text="View Service Recipients from the original order">
                        <ul>
                            @foreach (var (location, locationIndex) in Model.PreviouslySelected.Select((x, i) => (x, i)))
                            {
                                <input type="hidden" asp-for="PreviouslySelected[locationIndex].Name" />

                                @foreach (var (recipient, index) in location.ServiceRecipients.Select((y, j) => (y, j)))
                                {
                                    <input type="hidden" asp-for="PreviouslySelected[locationIndex].ServiceRecipients[index].Name"/>
                                    <input type="hidden" asp-for="PreviouslySelected[locationIndex].ServiceRecipients[index].OdsCode" />
                                    <input type="hidden" asp-for="PreviouslySelected[locationIndex].ServiceRecipients[index].InputQuantity" />
                                    <li>@recipient.Description : @recipient.InputQuantity</li>
                                }
                            }
                        </ul>
                    </nhs-details>
                </div>
            }

            <div class="nhsuk-u-margin-top-9">
                @{
                    var submitButton = !inputRequired && Model.OrderType.MergerOrSplit
                    ? "Continue"
                    : string.Empty; // use the default text
                }
                <nhs-submit-button text="@submitButton" />
            </div>
        </form>
    </div>
</div>
