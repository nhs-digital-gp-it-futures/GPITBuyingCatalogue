@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Organisations.Models
@using NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.ServiceRecipientModels;
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.Components.NhsSecondaryButton
@model NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.ServiceRecipientModels.SelectRecipientsModel;

<partial name="Partials/_BackLink" model="Model" />
<script type="text/javascript" src="@Url.Content("~/js/Recipients.min.js")" asp-append-version="true"></script>

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-validation-summary />
        <nhs-page-title model="@Model" />

        @if ((Model.SubLocations?.Any() ?? false) && Model.OrganisationType != OrganisationType.GP)
        {
            if (Model.HasImportedRecipients
                || (Model.PreviouslySelected?.Any() ?? false))
            {
                <nhs-inset-text>
                    @if (Model.HasImportedRecipients)
                    {
                        <p>
                            <span>Your Service Recipients have been imported successfully.</span>

                            If you need to make changes, you can do so manually or re-import them.
                        </p>
                    }

                    @if (Model.PreviouslySelected?.Any() ?? false)
                    {
                        <p id="previously-selected">
                            We're only showing the Service Recipients which were not included in the original order.
                        </p>
                    }
                </nhs-inset-text>
            }

            <hr />

            <vc:nhs-secondary-button url="@Url.PageLink(values: new { selectionMode = SelectionMode.All })"
                                     text="Select all"
                                     type="Secondary" />
            <vc:nhs-secondary-button url="@Url.PageLink(values: new { selectionMode = SelectionMode.None })"
                                     text="Deselect all"
                                     type="Secondary" />

            <vc:nhs-secondary-button url="#"
                                     text="Search for Service Recipients"
                                     type="Secondary"
                                     id="showDialog"/>

        }

        <form method="post" id = "sr-form">
            <input type="hidden" asp-for="ImportRecipientsLink" />
            @if (Model.SubLocations?.Any() ?? false)
            {
                @if (Model.OrganisationType != OrganisationType.GP)
                {
                    <h3 style="white-space:nowrap">Sublocations for @Model.OrganisationName</h3>
                }

                @foreach (var (location, lIndex) in Model.SubLocations.Select((x, i) => (x, i)))
                {
                    <input type="hidden" asp-for="@Model.SubLocations[lIndex].Name" />
                    <nhs-expander label-text="@location.Name" secondary-text-title="@(location.ServiceRecipients.Count(r => r.Selected)) " secondary-text="recipients selected" bold-title="true" open="@(Model.ShouldExpand || location.ServiceRecipients.Any(x => x.Selected))">

                        <nhs-table id="sr-table">
                            <nhs-table-column>
                                <div class="nhsuk-checkboxes__item">
                                    <input type="checkbox" class="nhsuk-checkboxes__input" name="selectAll@(lIndex)" id="selectAll@(lIndex)" />
                                    <label for="selectAll@(lIndex)" class="nhsuk-label nhsuk-checkboxes__label">
                                        Organisation
                                    </label>
                                </div>
                            </nhs-table-column>
                            <nhs-table-column>ODS code</nhs-table-column>
                            @foreach (var (item, rIndex) in location.ServiceRecipients.Select((x, i) => (x, i)))
                            {
                                <nhs-table-row-container id="@item.OdsCode">
                                    <nhs-table-cell>
                                        <nhs-checkbox-container>
                                            <nhs-checkbox asp-for="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].Selected"
                                                          label-text="@item.Name"
                                                          hidden-input="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].Name" 
                                                          checkbox-class="main-srs gather-data"/>
                                        </nhs-checkbox-container>
                                    </nhs-table-cell>
                                    <nhs-table-cell>
                                        <div class="nhsuk-input--width-10 nhsuk-u-margin-top-2">@item.OdsCode</div>
                                        <input type="hidden" asp-for="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].OdsCode" />
                                    </nhs-table-cell>
                                </nhs-table-row-container>
                            }
                        </nhs-table>
                    </nhs-expander>
                }
                <br />
                <nhs-submit-button />
            }
            else
            {
                <nhs-submit-button text="Continue" />
            }
        </form>
    </div>
</div>

 <dialog class="modal micromodal-slide" id="search-modal" aria-hidden="true">
    <div class="modal__overlay" tabindex="-1" data-micromodal-close>
      <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
        <header class="modal__header">
          <h2 class="nhsuk-heading-m nhsuk-u-margin-bottom-0 nhsuk-u-margin-top-0" id="modal-1-title">
            Search for Service Recipients
          </h2>
          <button class="nhsuk-button nhsuk-button--secondary bc-small-button nhsuk-u-margin-bottom-0" aria-label="Close modal" data-micromodal-close>Close</button>
        </header>
        <main class="modal__content" id="modal-1-content">
          <p class="nhsuk-body">
            Find and select the Service Recipients you want to include in this order.
          </p>
          <div>
              <form action="" method="post">
                <div class="app-search__contents">
                <label class="c-search__label visually-hidden" for="query">Filter Catalogue Solutions</label>
                <input class="app-search__input ui-autocomplete-input" id="filter-term"
                  placeholder="Search by ODS code or organisation name"  autocomplete="off" name="query" type="search"
                  maxlength="50">
                  
                <button type="button" class="app-search__submit">
                    <svg class="icon icon__search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true"
                         focusable="false">
                        <path
                            d="M19.71 18.29l-4.11-4.1a7 7 0 1 0-1.41 1.41l4.1 4.11a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 10a5 5 0 1 1 5 5 5 5 0 0 1-5-5z">
                        </path>
                        <image class="icon__search icon__search--fallback"
                               src="/apps-library/static/apps_library/images/icon-search-blue.352e1118d687.png" xlink:href=""></image>
                    </svg>
                    <span class="visually-hidden">Search</span>
                </button>
                        </div>
            </form>
          </div>
          <div class="search-results-container">
              <nhs-table id="search-table">
                  <nhs-table-column>
                      <div class="nhsuk-checkboxes__item">
                          <label class="nhsuk-label nhsuk-checkboxes__label">
                              Organisation
                          </label>
                      </div>
                  </nhs-table-column>
                  <nhs-table-column>ODS code</nhs-table-column>
                  @foreach (var (item, rIndex) in @Model.SearchRecipients.Select((x, i) => (x, i)))
                  {
                            <nhs-table-row-container id="@item.OdsCode">
                          <nhs-table-cell>
                              <nhs-checkbox-container>
                                  <nhs-checkbox asp-for="@Model.SearchRecipients[rIndex].Selected"
                                                label-text="@item.Name"
                                                hidden-input="@Model.SearchRecipients[rIndex].Name"
                                                      checkbox-class="modal-checkbox"/>
                              </nhs-checkbox-container>
                          </nhs-table-cell>
                          <nhs-table-cell>
                              <div class="nhsuk-input--width-10 nhsuk-u-margin-top-2">@item.OdsCode</div>
                                    <input id="ods-code-hidden" type="hidden" asp-for="@Model.SearchRecipients[rIndex].OdsCode" />
                          </nhs-table-cell>
                      </nhs-table-row-container>
                  }
              </nhs-table>
            <div id="noRecordsFound" style="display: none;"><p class="nhsuk-body nhsuk-u-margin-top-3">There are no Service Recipients that match. Try entering different search criteria.</p></div>
          </div>
        </main>
        <footer class="modal__footer">
            <div style="display: inline">
                    <button value="cancel" formmethod="dialog">Cancel</button>
                    <button id="submit-modal-btn" value="default" class="nhsuk-button  bc-small-button nhsuk-u-margin-bottom-0">Apply recipients</button>
                <a href="#" class="nhsuk-link nhsuk-u-margin-left-2 nhsuk-u-margin-bottom-0" aria-label="Close this dialog window">Cancel</a>
            </div>
        </footer>
      </div>
    </div>
  </dialog>
  
<div style="display:inline-block;">
    <input type="hidden" id="sr-json-data" name="sr-json-data" />
</div>


<script>
    //Form constants
    const showDialogButton = document.getElementById("showDialog");
    const mainForm = document.getElementById("sr-form");
    const mainCheckboxSelectedHidden = document.getElementById("sr-json-data");


    //Modal constants
    const dialog = document.getElementById("search-modal");
    const table = document.getElementById("search-table");
    const searchInput = document.getElementById("filter-term");
    const noRecordsFound = document.getElementById("noRecordsFound");
    const submitModalButton = document.getElementById("submit-modal-btn");

    showDialogButton.addEventListener("click", () => {
        dialog.showModal();
    });

    mainForm.onsubmit = function (e) {
        var data = [];
        document.querySelectorAll(".gather-data:checked").forEach(function (checkbox) {
            data.push({
                orgCode: checkbox.data('orgcode'),
                category: checkbox.data('category'),
                name: checkbox.val()
            });
        });
        console.log('in submit function and data is >>> ', data);
        // Convert the data array into a JSON string
        var jsonData = JSON.stringify(data);

        // Put the JSON data into the hidden input field
        mainCheckboxSelectedHidden.val(jsonData);
    };

    submitModalButton.addEventListener("click", () => {

        var checkedboxes = document.querySelectorAll('.modal-checkbox:checked');
        checkedboxes.forEach(function (item) {

            // Find the checkbox with matchingods code
            var row = item.closest('tr');
            var query = "#sr-table #" + row.id + " input[type='checkbox'].main-srs";
            var checkbox = document.querySelector(query);

            // Check if the checkbox exists
            if (checkbox) {
                // Set the checkbox to checked
                checkbox.checked = true;
            }
        });
        var expanders = document.querySelectorAll('.nhsuk-expander');
        expanders.forEach(function (container) {
            //var container = $(this);
            var checks = container.querySelectorAll('.main-srs:checked:not(.sub-sr-selector)');
            var checkboxCount = checks.length;

            var countBox = container.querySelector('.nhsuk-details__summary-text_secondary b');
            countBox.innerHTML = checkboxCount + " ";
        });

        dialog.close();

    });

    searchInput.addEventListener("input", function () {
        const searchTerm = searchInput.value.toLowerCase();
        const rows = table.getElementsByTagName("tbody")[0].getElementsByTagName("tr");

        let hasMatch = false;

        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            const columns = row.getElementsByTagName("td");
            let rowMatch = false;

            for (let j = 0; j < columns.length; j++) {
                const column = columns[j];

                if (column.textContent.toLowerCase().includes(searchTerm)) {
                    rowMatch = true;
                    break;
                }
            }

            if (rowMatch) {
                row.style.display = "";
                hasMatch = true;
            } else {
                row.style.display = "none";
            }
        }

        if (hasMatch) {
            noRecordsFound.style.display = "none";
        } else {
            noRecordsFound.style.display = "block";
        }
    });
</script>
