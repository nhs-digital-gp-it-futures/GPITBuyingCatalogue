@using NHSD.GPIT.BuyingCatalogue.EntityFramework.Organisations.Models
@using NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.ServiceRecipientModels;
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.Components.NhsSecondaryButton
@model NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.ServiceRecipientModels.SelectRecipientsModel;

<partial name="Partials/_BackLink" model="Model" />
<script type="text/javascript" src="@Url.Content("~/js/Recipients.min.js")" asp-append-version="true"></script>

<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-full">
        <nhs-validation-summary />
        <nhs-page-title model="@Model" />

        @if ((Model.SubLocations?.Any() ?? false) && Model.OrganisationType != OrganisationType.GP)
        {
            if (Model.HasImportedRecipients
            || (Model.PreviouslySelected?.Any() ?? false))
            {
                <nhs-inset-text>
                    @if (Model.HasImportedRecipients)
                    {
                        <p>
                            <span>Your Service Recipients have been imported successfully.</span>

                            If you need to make changes, you can do so manually or re-import them.
                        </p>
                    }

                    @if (Model.PreviouslySelected?.Any() ?? false)
                    {
                        <p id="previously-selected">
                            We're only showing the Service Recipients which were not included in the original order.
                        </p>
                    }
                </nhs-inset-text>
            }

            <vc:nhs-secondary-button url="@Url.PageLink(values: new { selectionMode = SelectionMode.All })"
                                 text="Select all"
                                 type="Secondary" />
            <vc:nhs-secondary-button url="@Url.PageLink(values: new { selectionMode = SelectionMode.None })"
                                 text="Deselect all"
                                 type="Secondary" />

            <vc:nhs-secondary-button text="Search for Service Recipients"
                                 type="Secondary"
                                 id="show-dialog"/>
        }

        <form method="post" id = "sr-form">
            <input type="hidden" asp-for="Title" />
            <input type="hidden" asp-for="Caption" />
            <input type="hidden" asp-for="Advice" />
            <input type="hidden" asp-for="SelectAtLeast" />
            <input type="hidden" asp-for="OrganisationName" />
            @if (Model.SubLocations?.Any() ?? false)
            {
                @if (Model.OrganisationType != OrganisationType.GP)
                {
                    <h3 style="white-space:nowrap">Sublocations for @Model.OrganisationName</h3>
                }

                @foreach (var (location, lIndex) in Model.SubLocations.Select((x, i) => (x, i)))
                {
                    var expandWhenNotValid = !ViewData.ModelState.IsValid && lIndex == 0;

                    <input type="hidden" asp-for="@Model.SubLocations[lIndex].Name" />
                    <nhs-expander label-text="@location.Name" secondary-text-title="@(location.ServiceRecipients.Count(r => r.Selected)) " secondary-text="recipients selected" bold-title="true" open="@(expandWhenNotValid || Model.ShouldExpand || location.ServiceRecipients.Any(x => x.Selected))">

                        <nhs-table id="sr-table">
                            <nhs-table-column>
                                <div class="nhsuk-checkboxes__item">
                                    <input type="checkbox" class="nhsuk-checkboxes__input" name="selectAll@(lIndex)" id="selectAll@(lIndex)" />
                                    <label for="selectAll@(lIndex)" class="nhsuk-label nhsuk-checkboxes__label">
                                        Organisation
                                    </label>
                                </div>
                            </nhs-table-column>
                            <nhs-table-column>ODS code</nhs-table-column>
                            @foreach (var (item, rIndex) in location.ServiceRecipients.Select((x, i) => (x, i)))
                            {
                                <nhs-table-row-container id="@item.OdsCode">
                                    <nhs-table-cell>
                                        <nhs-checkbox-container>
                                            <nhs-checkbox asp-for="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].Selected"
                                              label-text="@item.Name"
                                              hidden-input="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].Name" 
                                              checkbox-class="main-srs gather-data"/>
                                        </nhs-checkbox-container>
                                    </nhs-table-cell>
                                    <nhs-table-cell>
                                        <div class="nhsuk-input--width-10 nhsuk-u-margin-top-2">@item.OdsCode</div>
                                        <input type="hidden" asp-for="@Model.SubLocations[lIndex].ServiceRecipients[rIndex].OdsCode" />
                                    </nhs-table-cell>
                                </nhs-table-row-container>
                            }
                        </nhs-table>
                    </nhs-expander>
                }
                <br />
                <nhs-submit-button />
            }
            else
            {
                <nhs-submit-button text="Continue" />
            }
        </form>
    </div>
</div>

<vc:nhs-modal-search id="search-recipients-modal" show-dialog-button-id="show-dialog" table-partial-view="ServiceRecipients/_recipientTable" table-data="@Model.SearchRecipients" callback-function="updateRecipients"/>


<script>
    //Function called on submit modal
    function updateRecipients() {
        var checkedboxes = document.querySelectorAll('.modal-checkbox:checked');
        checkedboxes.forEach(function (item) {

            // Find the checkbox with matching ods code
            var row = item.closest('tr');
            var query = "#sr-table #" + row.id + " input[type='checkbox'].main-srs";
            var checkbox = document.querySelector(query);

            // Check if the checkbox exists
            if (checkbox) {
                // Set the checkbox to checked
                checkbox.checked = true;
            }

            item.checked = false;
        });
        var expanders = document.querySelectorAll('.nhsuk-expander');
        expanders.forEach(function (container) {
            var checks = container.querySelectorAll('.main-srs:checked:not(.sub-sr-selector)');
            var checkboxCount = checks.length;

            var countBox = container.querySelector('.nhsuk-details__summary-text_secondary b');
            countBox.innerHTML = checkboxCount + " ";
        });
    }
</script>

