@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Solutions.Controllers
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Competitions.Controllers
@using NHSD.GPIT.BuyingCatalogue.ServiceContracts.Enums
@using NHSD.GPIT.BuyingCatalogue.UI.Components.Views.Shared.Components.NhsSecondaryButton
@using NHSD.GPIT.BuyingCatalogue.WebApp.Areas.Competitions.Models.DashboardModels

@model NHSD.GPIT.BuyingCatalogue.WebApp.Models.Shared.Dashboard.DashboardCardBaseModel<CompetitionDashboardItem>

<nhs-card-v2>
    <nhs-card-content centre-alignment="@(!Model.HasItems)">
        @if (Model.HasItems && !Model.IsDashboardView)
        {
            <div class="header-with-detail">
                <h3 class="nhsuk-heading-m">Total number of competitions (@Model.NumberOfItems)</h3>
            </div>
            <div class="detail">
                <a class="nhsuk-button nhsuk-u-margin-bottom-2"
                   asp-action="@(nameof(CompetitionsDashboardController.BeforeYouStart))"
                   asp-controller="@(typeof(CompetitionsDashboardController).ControllerName())"
                   asp-route-internalOrgId="@(Model.InternalOrgId)"
                   asp-route-area="@(typeof(CompetitionsDashboardController).AreaName())">Create new competition</a>
            </div>
            <hr class="nhsuk-u-margin-bottom-4 nhsuk-u-margin-top-4"/>
        }

        @if (Model.HasItems)
        {
            <nhs-table data-test-id="competitions-table">
                <nhs-table-column>Name</nhs-table-column>
                <nhs-table-column>Description</nhs-table-column>
                <nhs-table-column>Date Created</nhs-table-column>
                <nhs-table-column>Status</nhs-table-column>
                <nhs-table-column>
                    <span class="nhsuk-u-visually-hidden">Action</span>
                </nhs-table-column>

                @foreach (var competition in Model.Items.OrderByDescending(x => x.Created).Take(Model.ItemsToIterate))
                {
                    <nhs-table-row-container>
                        <nhs-table-cell style="word-break:break-word">@competition.Name</nhs-table-cell>
                        <nhs-table-cell style="word-break:break-word">@competition.Description</nhs-table-cell>
                        <nhs-table-cell>@competition.Created.ToString("d MMM yyyy")</nhs-table-cell>
                        <nhs-table-cell>
                            <nhs-tag status-enum="@competition.Progress" />
                        </nhs-table-cell>
                        <nhs-table-cell>
                            @{
                                var competitionAction = GetCompetitionActionLink(competition);
                            }
                            <a href="@competitionAction">View</a>
                        </nhs-table-cell>
                    </nhs-table-row-container>
                }
            </nhs-table>

            @if (Model.IsDashboardView)
            {
                <a asp-action="@(nameof(CompetitionsDashboardController.Index))" asp-controller="@(typeof(CompetitionsDashboardController).ControllerName())" asp-route-internalOrgId="@Model.InternalOrgId" asp-route-area="@(typeof(CompetitionsDashboardController).AreaName())">
                    View competitions
                </a>
            }
            @if (Model.ShouldUsePagination)
            {
                <div id="pagination">
                    <govuk-pagination current-page-number="@Model.PageOptions.PageNumber"
                                      total-number-of-pages="@Model.PageOptions.NumberOfPages"/>

                </div>
            }
        }
        else
        {
            <img src="~/images/competitions-splash-with-shadow.svg" alt="Competition image" class="splash-intro-img nhsuk-u-margin-top-2"/>
            <h3 class="nhsuk-heading-m">No competitions created yet</h3>
            <p class="nhsuk-body">
                Competitions you create for your organisation will appear here.<br/>

                Competitions allow you to compare
                <a asp-action="@nameof(SolutionsController.Index)"
                   asp-controller="@typeof(SolutionsController).ControllerName()"
                   asp-area="@typeof(SolutionsController).AreaName()">Catalogue Solutions</a>.
            </p>
            <vc:nhs-secondary-button text="Create new competition"
                                     url="@(Url.Action(nameof(CompetitionsDashboardController.BeforeYouStart), typeof(CompetitionsDashboardController).ControllerName(), new { area = typeof(CompetitionsDashboardController).AreaName(), internalOrgId = Model.InternalOrgId }))"
                                     type="Primary"/>
        }
        
    </nhs-card-content>
</nhs-card-v2>

@{
    string GetCompetitionActionLink(CompetitionDashboardItem competition)
        => competition.Progress == TaskProgress.Completed
            ? competition.IsDirectAward() ? Url.Action(nameof(CompetitionResultsController.DirectAward), typeof(CompetitionResultsController).ControllerName(), new { Area = typeof(CompetitionResultsController).AreaName(), internalOrgId = Model.InternalOrgId, competitionId = competition.Id }) :
                Url.Action(nameof(CompetitionResultsController.ViewResults), typeof(CompetitionResultsController).ControllerName(), new { Area = typeof(CompetitionResultsController).AreaName(), internalOrgId = Model.InternalOrgId, competitionId = competition.Id })
            : GetEditLink(competition);

    string GetEditLink(CompetitionDashboardItem competition)
    {
        var routingArgs = new { Area = typeof(CompetitionSelectSolutionsController).AreaName(), internalOrgId = Model.InternalOrgId, competitionId = competition.Id };

        if (competition.Solutions.All(x => !x.IsShortlisted)
            || competition.Solutions.Any(x => !x.IsShortlisted && string.IsNullOrWhiteSpace(x.Justification))
            || !competition.ShortlistAccepted.HasValue)
        {
            return Url.Action(nameof(CompetitionSelectSolutionsController.SelectSolutions), typeof(CompetitionSelectSolutionsController).ControllerName(), routingArgs);
        }

        return Url.Action(nameof(CompetitionTaskListController.Index), typeof(CompetitionTaskListController).ControllerName(), routingArgs);
    }
}
