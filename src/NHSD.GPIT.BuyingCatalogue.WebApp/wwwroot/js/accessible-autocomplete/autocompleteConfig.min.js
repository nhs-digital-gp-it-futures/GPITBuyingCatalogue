class autocompleteConfig{constructor(n,t,i,r,u){this.modelId=n;this.ajaxUrl=t;this.queryParameterName=i;this.titleText=r;this.currentPageUrl=u;this.form=document.getElementById(n.concat("-search-form"));this.defaultInput=document.getElementById(n.concat("-form-input"));this.formInputLabel=document.getElementById(n.concat("-form-input-label"))}Implement(){this.defaultInput.parentNode.removeChild(this.defaultInput);this.formInputLabel.removeAttribute("for");this.form.firstElementChild.removeAttribute("style");accessibleAutocomplete({element:document.getElementById(this.modelId.concat("-container")),id:this.modelId,source:this.source.bind(this),name:this.queryParameterName,confirmOnBlur:!1,onConfirm:this.onConfirm.bind(this),defaultValue:this.defaultValue(),minLength:2,templates:{inputValue:this.inputValue.bind(this),suggestion:this.suggestion.bind(this)}});this.form&&this.addFormEvents()}source(n,t){const r=this.ajaxUrl.concat("?",this.queryParameterName,"=",n),i=new XMLHttpRequest;i.open("GET",r);i.onload=()=>{if(i.status===200){const n=JSON.parse(i.responseText);t(n)}};i.send()}suggestion(n){if(n.title&&n.category){const t=100,i=n.title.length>t?"...":"",r=n.title.substring(0,t)+i;return`<span class="autocomplete__option-title">${r}</span>${n.category?`<span class="autocomplete__option-category">${n.category}</span>`:""}`}return""}inputValue(n){return n&&n.title?n.title.trim():""}onConfirm(n){window.location.href=n.url}addFormEvents(){this.form.addEventListener("keyup",{key:n}=>{n==="Enter"&&document.activeElement.id===this.modelId&&this.form.submit()})}defaultValue(){let n=new URLSearchParams(window.location.search);return n.has(this.queryParameterName)?n.get(this.queryParameterName):""}}